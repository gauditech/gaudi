{
  "name": "@gaudi/example-githubc",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "// --- build": "",
    "build": "npm run build:compile && npm run build:db",
    "build:compile": "npm run setenv -- npx gaudi-cli build",
    "build:db": "npm run build:db:push",
    "build:db:push": "npm run setenv -- npx gaudi-cli db push",
    "build:db:reset": "npm run setenv -- npx gaudi-cli db reset",
    "// --- dev": "",
    "dev": "npm run dev:prepare; concurrently --names BUILD,MIGR,RUN --prefix-colors blue,magenta,yellow \"npm run dev:compile\" \"npm run dev:migrate\" \"npm run dev:start\"",
    "// - prepare - precreate output folder(s) so watchers work as expected": "",
    "dev:prepare": "make-dir ./dist/db;",
    "dev:compile": "chokidar ./src \"./node_modules/@gaudi/engine/\" --debounce --initial --command \"npm run build:compile\"",
    "dev:migrate": "chokidar ./dist/db/ --debounce --initial --command \"npm run build:migrate\"",
    "// - if definition.json exists then start server and let nedemon take over, otherwise, wait for definition.json to be created before starting server": "",
    "dev:start": "if [ -f './dist/definition.json' ]; then npm start; else chokidar ./dist/definition.json --command \"if [[ '{event}' == 'add' ]]; then npm start; fi;\"; fi;",
    "// --- server": "",
    "start": "npm run setenv -- nodemon --watch ./node_modules/@gaudi/engine/runtime --watch ./dist --enable-source-maps --exec \"npx gaudi-cli run\"",
    "// --- populate": "",
    "populate": "npm run setenv -- npx gaudi-cli db populate --populator Dev",
    "// --- other": "",
    "clean": "rimraf ./dist"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@gaudi/engine": "file:../../dist"
  },
  "devDependencies": {
    "chokidar-cli": "^3.0.0",
    "dotenv-cli": "^6.0.0",
    "make-dir-cli": "^3.0.0",
    "nodemon": "^2.0.20",
    "rimraf": "^3.0.2"
  }
}
