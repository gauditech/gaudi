model Org {
  field name {
    type string,
    validate {
      hook {
        default arg name
        source noUnicode from "githubc.js"
      }
    }
  }
  field slug {
    type string,
    unique,
    validate {
      hook {
        default arg slug
        inline "!/\\s/.test(slug)"
      }
    }
  }
  field description { type string }
  field optOut { type string, nullable }

  relation repos { from Repo, through org }
  relation memberships { from OrgMembership, through org }

  query members { from memberships.user }
  query public_repos { from repos, filter { is_public is true } }
  query public_issues { from public_repos.issues }

  hook nameAndDesc {
    arg test query {
      select { name, description }
    }
    inline "test.name + ': ' + test.description"
  }
}

model OrgMembership {
    reference user { to User }
    reference org { to Org }
}

model Repo {
    reference org { to Org }

    field name { type string }
    field slug { type string, unique }
    field description { type string }
    field is_public { type boolean, default true }

    relation issues { from Issue, through repo }
}

model Issue {
    field title { type string }
    field body { type string }
    reference repo { to Repo }
}

// ----- start auth model
model User {
    field name { type string }
    relation authLocal { from UserAuthLocal, through user }
    relation accessToken { from UserAccessToken, through user }
    relation org_memberships { from OrgMembership, through user }
}
model UserAuthLocal {
    reference user { to User }
    field username { type string, unique }
    field password { type string }
}
model UserAccessToken {
    reference user { to User }
    field token { type string, unique }
    field expiryDate { type string }
}
