// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reference Input Element and Extra create with a valid reference 1`] = `
{
  "extra_id": 1,
  "id": 1,
  "name": "element",
  "nullableExtra_id": 1,
}
`;

exports[`Reference Input Element and Extra create with an invalid references 1`] = `
{
  "code": "ERROR_CODE_VALIDATION",
  "data": {
    "errors": [
      "Can't find extra_extraData_slug with value: baz",
      "nullableExtra_extraData_slug must be defined",
    ],
    "inner": [
      {
        "errors": [
          "Can't find extra_extraData_slug with value: baz",
        ],
        "inner": [],
        "message": "Can't find extra_extraData_slug with value: baz",
        "name": "ValidationError",
        "params": {
          "originalValue": "baz",
          "path": "extra_extraData_slug",
          "value": "baz",
        },
        "path": "extra_extraData_slug",
        "type": "reference-not-found",
        "value": "baz",
      },
      {
        "errors": [
          "nullableExtra_extraData_slug must be defined",
        ],
        "inner": [],
        "message": "nullableExtra_extraData_slug must be defined",
        "name": "ValidationError",
        "params": {
          "path": "nullableExtra_extraData_slug",
        },
        "path": "nullableExtra_extraData_slug",
        "type": "defined",
      },
    ],
    "value": {
      "extra_extraData_slug": "baz",
      "name": "element",
    },
  },
  "message": "Validation error",
}
`;

exports[`Reference Input Element and Extra validation error with non-nullable reference 1`] = `
{
  "code": "ERROR_CODE_VALIDATION",
  "data": {
    "errors": [
      "extra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
      "nullableExtra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
    ],
    "inner": [
      {
        "errors": [
          "extra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
        ],
        "inner": [],
        "message": "extra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
        "name": "ValidationError",
        "params": {
          "originalValue": null,
          "path": "extra_extraData_slug",
          "type": "string",
          "value": null,
        },
        "path": "extra_extraData_slug",
        "type": "typeError",
        "value": null,
      },
      {
        "errors": [
          "nullableExtra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
        ],
        "inner": [],
        "message": "nullableExtra_extraData_slug must be a \`string\` type, but the final value was: \`null\`.
 If "null" is intended as an empty value be sure to mark the schema as \`.nullable()\`",
        "name": "ValidationError",
        "params": {
          "originalValue": null,
          "path": "nullableExtra_extraData_slug",
          "type": "string",
          "value": null,
        },
        "path": "nullableExtra_extraData_slug",
        "type": "typeError",
        "value": null,
      },
    ],
    "value": {
      "extra_extraData_slug": null,
      "name": "element",
      "nullableExtra_extraData_slug": null,
    },
  },
  "message": "Validation error",
}
`;
