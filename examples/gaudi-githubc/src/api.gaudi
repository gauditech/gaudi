api {
  entrypoint Org as org {
      identify { through slug }
      response { name, slug, description, repos { issues { title, body, repo { org } } }, members, public_repos, public_issues, nameAndDesc }

      get endpoint {}
      list endpoint { pageable }
      create endpoint {}
      update endpoint {}

      entrypoint repos {
          response { id, slug, description, org_id, issues { repo } }

          get endpoint {}
          list endpoint {}
          create endpoint {}
          update endpoint {}
          delete endpoint {}
      }

  //    entrypoint PublicRepos {
  //        target public_repos
  //        response { id, slug, description, org_id }
  //
  //        get endpoint {}
  //        list endpoint {}
  //        // create endpoint {}
  //    }
  //
  //    entrypoint AllIssues {
  //        target public_issues
  //        response { id, title, body }
  //        list endpoint {}
  //    }
  //
  //    entrypoint Members {
  //        target members
  //        response { id, name }
  //        list endpoint {}
  //        get endpoint {}
  //    }
  }

}

api User {
  entrypoint User {
    get endpoint {}
  }
}

// ----- populators

populator Dev {
  // org without repos and users
  populate Org as org {
    // org
    set name "Organization 1"
    set slug "org-1"
    set description "Description of org-1"
    set optOut null
  }

  // org without repos and users
  populate Org as org {
    // org
    set name "Organization 2"
    set slug "org-2"
    set description hook {
        arg slug slug
        inline "'Description of ' + slug"
    }
    set optOut hook {
        arg slug slug
        inline "'Opt out from org ' + slug"
    }

    populate repos as repo {
        // fields
        set name "Repo 1 at " + org.slug
        set slug hook {
            arg orgSlug org.slug
            inline "'repo-1-' + orgSlug"
        }
        set description hook {
            arg slug slug
            inline "'Description for ' + slug"
        }
        set is_public true
    }
  }

  // org without repos and users
  populate Org as org {
    repeat as iter { start 3, end 5 }

    // org
    set name hook {
        arg iter iter
        inline "'Organization ' + iter.current"
    }
    set slug hook {
        arg iter iter
        inline "'org-' + iter.current"
    }
    set description hook {
        arg slug slug
        inline "'Description of ' + slug"
    }
    set optOut hook {
        arg slug slug
        inline "'Opt out from org ' + slug"
    }

    populate repos as repo {
        repeat as riter { start 1, end 3 }

        // fields
        set name hook {
            arg riter riter
            arg orgSlug org.slug
            inline "'Repo ' + riter.current + ' at ' + orgSlug"
        }
        set slug hook {
            arg riter riter
            arg orgSlug org.slug
            inline "'repo-' + riter.current + '-' + orgSlug"
        }
        set description hook {
            arg slug slug
            inline "'Description for ' + slug"
        }
        set is_public true
    }
  }
}
