
model Org {
  field name { type text }
  field slug { type text, unique }
  field description { type text }

  relation repos { from Repo, through org }
}


model Repo {
  reference org { to Org }

  field name { type text }
  field slug { type text, unique }
  field description { type text }
  field is_public { type boolean, default true }
  field latest_num { type integer }

  relation issues { from Issue, through repo }
}


model Issue {
  reference repo { to Repo }

  field number { type text }
  field title { type text }

  relation comments { from Comment, through issue }
}

model Comment {
  reference issue { to Issue }
  field body { type text }
}

// ----- entrypoints

entrypoint Orgs {
  target model Org as org
  identify with slug
  response { name, slug, description }

  get endpoint {}
  list endpoint {}
  create endpoint {
    action {
      create org {}
    }
  }
  update endpoint {
    action {
      update org {}
    }
  }
  delete endpoint {}

  entrypoint Repos {
    target relation repos as repo
    response { id, slug, description, org_id }

    get endpoint {}
    list endpoint {}
    create endpoint {
      action {
        create repo {
          set latest_num 0
        }
      }
    }
    update endpoint {
      action {
        update repo {}
      }
    }
    delete endpoint {}

    entrypoint Issues {
      target relation issues as issue
      response { id, title, repo, comments }

      get endpoint {}
      create endpoint {
        action {
          create issue as issue {
            set number repo.latest_num
          }

          update repo as repo2 {
            set latest_num 1
          }

          create issue.comments as c {}
        }
      }
    }
  }
}
