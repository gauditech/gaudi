// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`queryables context query 1`] = `
"SELECT 1 AS "exists", "Org".id AS id, "Org.public_repos".name AS name
      FROM org AS "Org"
      JOIN
(
      SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"
            FROM org AS "Org"
            JOIN
      repo AS "Org.repos"
      ON "Org".id = "Org.repos".org_id
            WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos"
ON "Org".id = "Org.public_repos"."__join_connection"
      WHERE "Org".slug = :org_slug AND "Org.public_repos".id = :repo_id"
`;

exports[`queryables target query 1`] = `
{
  "filter": undefined,
  "from": {
    "kind": "query",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "slug",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "org_slug",
            "type": "text",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_repos",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "repo_id",
            "type": "integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_repos",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_repos",
          "namePath": [
            "Org",
            "public_repos",
          ],
          "refKey": "Org.public_repos",
          "retCardinality": "many",
          "retType": "Repo",
        },
      ],
      "name": "Org",
      "nullable": false,
      "refKey": "N/A",
      "retCardinality": "many",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Repo",
            "id",
          ],
          "refKey": "Repo.id",
        },
      ],
    },
  },
  "fromPath": [
    "Repo",
    "issues",
  ],
  "joinPaths": [
    {
      "joinPaths": [],
      "joinType": "inner",
      "kind": "relation",
      "name": "issues",
      "namePath": [
        "Org",
        "public_repos",
        "issues",
      ],
      "refKey": "Repo.issues",
      "retCardinality": "many",
      "retType": "Issue",
    },
  ],
  "name": "N/A",
  "nullable": false,
  "refKey": "N/A",
  "retCardinality": "many",
  "retType": "Issue",
  "select": [
    {
      "alias": "id",
      "kind": "field",
      "name": "id",
      "namePath": [
        "Org",
        "public_repos",
        "issues",
        "id",
      ],
      "refKey": "Issue.id",
    },
    {
      "alias": "name",
      "kind": "field",
      "name": "name",
      "namePath": [
        "Org",
        "public_repos",
        "issues",
        "name",
      ],
      "refKey": "Issue.name",
    },
    {
      "alias": "repo_id",
      "kind": "field",
      "name": "repo_id",
      "namePath": [
        "Org",
        "public_repos",
        "issues",
        "repo_id",
      ],
      "refKey": "Issue.repo_id",
    },
  ],
}
`;

exports[`queryables target query 2`] = `
"SELECT "Org.public_repos.issues".id AS id, "Org.public_repos.issues".name AS name, "Org.public_repos.issues".repo_id AS repo_id
      FROM (SELECT "Repo".id AS id       FROM org AS "Org"       JOIN (       SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"             FROM org AS "Org"             JOIN       repo AS "Org.repos"       ON "Org".id = "Org.repos".org_id             WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos" ON "Org".id = "Org.public_repos"."__join_connection"       WHERE "Org".slug = :org_slug AND "Org.public_repos".id = :repo_id) AS "Org.public_repos"
      JOIN
issue AS "Org.public_repos.issues"
ON "Org.public_repos".id = "Org.public_repos.issues".repo_id
      WHERE TRUE = TRUE"
`;
