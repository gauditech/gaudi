// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Endpoint queries chained nested query 1`] = `
{
  "parentContextQueryTrees": [
    {
      "alias": "$target_0",
      "name": "$target_0",
      "query": {
        "filter": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "slug",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "org_slug",
            "type": "text",
          },
        },
        "from": {
          "kind": "model",
          "refKey": "Org",
        },
        "fromPath": [
          "Org",
        ],
        "joinPaths": [],
        "name": "$target_0",
        "nullable": false,
        "refKey": "N/A",
        "retType": "Org",
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "Org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
      "related": [],
    },
  ],
  "responseQueryTree": {
    "alias": "$target_1",
    "name": "$target_1",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_issues",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "issue_id",
            "type": "integer",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "operator": "in",
          "rhs": {
            "kind": "variable",
            "name": "@context_ids",
            "type": "list-integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_issues",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_issues",
          "namePath": [
            "Org",
            "public_issues",
          ],
          "refKey": "Org.public_issues",
          "retType": "Issue",
        },
      ],
      "name": "$target_1",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Issue",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_issues",
            "id",
          ],
          "refKey": "Issue.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Org",
            "public_issues",
            "name",
          ],
          "refKey": "Issue.name",
        },
      ],
    },
    "related": [
      {
        "alias": "repo",
        "name": "repo",
        "query": {
          "filter": {
            "kind": "binary",
            "lhs": {
              "kind": "alias",
              "namePath": [
                "Issue",
                "id",
              ],
            },
            "operator": "in",
            "rhs": {
              "kind": "variable",
              "name": "@context_ids",
              "type": "list-integer",
            },
          },
          "from": {
            "kind": "model",
            "refKey": "Issue",
          },
          "fromPath": [
            "Issue",
            "repo",
          ],
          "joinPaths": [
            {
              "joinPaths": [],
              "joinType": "inner",
              "kind": "reference",
              "name": "repo",
              "namePath": [
                "Issue",
                "repo",
              ],
              "refKey": "Issue.repo",
              "retType": "Repo",
            },
          ],
          "name": "repo",
          "nullable": false,
          "refKey": "N/A",
          "retType": "Repo",
          "select": [
            {
              "alias": "name",
              "kind": "field",
              "name": "name",
              "namePath": [
                "Issue",
                "repo",
                "name",
              ],
              "refKey": "Repo.name",
            },
            {
              "alias": "is_public",
              "kind": "field",
              "name": "is_public",
              "namePath": [
                "Issue",
                "repo",
                "is_public",
              ],
              "refKey": "Repo.is_public",
            },
            {
              "alias": ""__join_connection"",
              "kind": "field",
              "name": "id",
              "namePath": [
                "Issue",
                "id",
              ],
              "refKey": "Issue.id",
            },
          ],
        },
        "related": [
          {
            "alias": "org",
            "name": "org",
            "query": {
              "filter": {
                "kind": "binary",
                "lhs": {
                  "kind": "alias",
                  "namePath": [
                    "Repo",
                    "id",
                  ],
                },
                "operator": "in",
                "rhs": {
                  "kind": "variable",
                  "name": "@context_ids",
                  "type": "list-integer",
                },
              },
              "from": {
                "kind": "model",
                "refKey": "Repo",
              },
              "fromPath": [
                "Repo",
                "org",
              ],
              "joinPaths": [
                {
                  "joinPaths": [],
                  "joinType": "inner",
                  "kind": "reference",
                  "name": "org",
                  "namePath": [
                    "Repo",
                    "org",
                  ],
                  "refKey": "Repo.org",
                  "retType": "Org",
                },
              ],
              "name": "org",
              "nullable": false,
              "refKey": "N/A",
              "retType": "Org",
              "select": [
                {
                  "alias": "id",
                  "kind": "field",
                  "name": "id",
                  "namePath": [
                    "Repo",
                    "org",
                    "id",
                  ],
                  "refKey": "Org.id",
                },
                {
                  "alias": "slug",
                  "kind": "field",
                  "name": "slug",
                  "namePath": [
                    "Repo",
                    "org",
                    "slug",
                  ],
                  "refKey": "Org.slug",
                },
                {
                  "alias": ""__join_connection"",
                  "kind": "field",
                  "name": "id",
                  "namePath": [
                    "Repo",
                    "id",
                  ],
                  "refKey": "Repo.id",
                },
              ],
            },
            "related": [],
          },
        ],
      },
    ],
  },
  "targetQueryTree": {
    "alias": "$target_1",
    "name": "$target_1",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_issues",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "issue_id",
            "type": "integer",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "operator": "in",
          "rhs": {
            "kind": "variable",
            "name": "@context_ids",
            "type": "list-integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_issues",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_issues",
          "namePath": [
            "Org",
            "public_issues",
          ],
          "refKey": "Org.public_issues",
          "retType": "Issue",
        },
      ],
      "name": "$target_1",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Issue",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_issues",
            "id",
          ],
          "refKey": "Issue.id",
        },
      ],
    },
    "related": [],
  },
}
`;

exports[`Endpoint queries chained nested query 2`] = `
[
  "SELECT "Org".id AS id
FROM "org" AS "Org"

WHERE "Org".slug = :org_slug",
  "SELECT "Org.public_issues".id AS id
      FROM "org" AS "Org"
      JOIN
(
      SELECT "Org.public_repos.issues".id AS id, "Org.public_repos.issues".name AS name, "Org.public_repos.issues".repo_id AS repo_id, "Org".id AS "__join_connection"
            FROM "org" AS "Org"
            JOIN
        (
              SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"
                    FROM "org" AS "Org"
                    JOIN
              "repo" AS "Org.repos"
              ON "Org".id = "Org.repos".org_id
                    WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos"
        ON "Org".id = "Org.public_repos"."__join_connection"
        JOIN
      "issue" AS "Org.public_repos.issues"
      ON "Org.public_repos".id = "Org.public_repos.issues".repo_id
            WHERE TRUE = TRUE) AS "Org.public_issues"
ON "Org".id = "Org.public_issues"."__join_connection"
      WHERE "Org.public_issues".id = :issue_id AND "Org".id IN :@context_ids",
  "SELECT "Org.public_issues".id AS id, "Org.public_issues".name AS name
      FROM "org" AS "Org"
      JOIN
(
      SELECT "Org.public_repos.issues".id AS id, "Org.public_repos.issues".name AS name, "Org.public_repos.issues".repo_id AS repo_id, "Org".id AS "__join_connection"
            FROM "org" AS "Org"
            JOIN
        (
              SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"
                    FROM "org" AS "Org"
                    JOIN
              "repo" AS "Org.repos"
              ON "Org".id = "Org.repos".org_id
                    WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos"
        ON "Org".id = "Org.public_repos"."__join_connection"
        JOIN
      "issue" AS "Org.public_repos.issues"
      ON "Org.public_repos".id = "Org.public_repos.issues".repo_id
            WHERE TRUE = TRUE) AS "Org.public_issues"
ON "Org".id = "Org.public_issues"."__join_connection"
      WHERE "Org.public_issues".id = :issue_id AND "Org".id IN :@context_ids",
  "SELECT "Issue.repo".name AS name, "Issue.repo".is_public AS is_public, "Issue".id AS "__join_connection"
      FROM "issue" AS "Issue"
      JOIN
"repo" AS "Issue.repo"
ON "Issue".repo_id = "Issue.repo".id
      WHERE "Issue".id IN :@context_ids",
  "SELECT "Repo.org".id AS id, "Repo.org".slug AS slug, "Repo".id AS "__join_connection"
      FROM "repo" AS "Repo"
      JOIN
"org" AS "Repo.org"
ON "Repo".org_id = "Repo.org".id
      WHERE "Repo".id IN :@context_ids",
]
`;

exports[`Endpoint queries nested query 1`] = `
{
  "parentContextQueryTrees": [
    {
      "alias": "$target_0",
      "name": "$target_0",
      "query": {
        "filter": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "slug",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "org_slug",
            "type": "text",
          },
        },
        "from": {
          "kind": "model",
          "refKey": "Org",
        },
        "fromPath": [
          "Org",
        ],
        "joinPaths": [],
        "name": "$target_0",
        "nullable": false,
        "refKey": "N/A",
        "retType": "Org",
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "Org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
      "related": [],
    },
  ],
  "responseQueryTree": {
    "alias": "$target_1",
    "name": "$target_1",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_repos",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "repo_id",
            "type": "integer",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "operator": "in",
          "rhs": {
            "kind": "variable",
            "name": "@context_ids",
            "type": "list-integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_repos",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_repos",
          "namePath": [
            "Org",
            "public_repos",
          ],
          "refKey": "Org.public_repos",
          "retType": "Repo",
        },
      ],
      "name": "$target_1",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_repos",
            "id",
          ],
          "refKey": "Repo.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Org",
            "public_repos",
            "name",
          ],
          "refKey": "Repo.name",
        },
      ],
    },
    "related": [],
  },
  "targetQueryTree": {
    "alias": "$target_1",
    "name": "$target_1",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_repos",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "repo_id",
            "type": "integer",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "operator": "in",
          "rhs": {
            "kind": "variable",
            "name": "@context_ids",
            "type": "list-integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_repos",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_repos",
          "namePath": [
            "Org",
            "public_repos",
          ],
          "refKey": "Org.public_repos",
          "retType": "Repo",
        },
      ],
      "name": "$target_1",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_repos",
            "id",
          ],
          "refKey": "Repo.id",
        },
      ],
    },
    "related": [],
  },
}
`;

exports[`Endpoint queries nested query 2`] = `
[
  "SELECT "Org".id AS id
FROM "org" AS "Org"

WHERE "Org".slug = :org_slug",
  "SELECT "Org.public_repos".id AS id
      FROM "org" AS "Org"
      JOIN
(
      SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"
            FROM "org" AS "Org"
            JOIN
      "repo" AS "Org.repos"
      ON "Org".id = "Org.repos".org_id
            WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos"
ON "Org".id = "Org.public_repos"."__join_connection"
      WHERE "Org.public_repos".id = :repo_id AND "Org".id IN :@context_ids",
  "SELECT "Org.public_repos".id AS id, "Org.public_repos".name AS name
      FROM "org" AS "Org"
      JOIN
(
      SELECT "Org.repos".id AS id, "Org.repos".is_public AS is_public, "Org.repos".name AS name, "Org.repos".org_id AS org_id, "Org".id AS "__join_connection"
            FROM "org" AS "Org"
            JOIN
      "repo" AS "Org.repos"
      ON "Org".id = "Org.repos".org_id
            WHERE "Org.repos".is_public = TRUE) AS "Org.public_repos"
ON "Org".id = "Org.public_repos"."__join_connection"
      WHERE "Org.public_repos".id = :repo_id AND "Org".id IN :@context_ids",
]
`;
