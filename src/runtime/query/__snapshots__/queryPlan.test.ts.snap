// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query plan order by expression: QueryPlan snapshot 1`] = `
{
  "entry": "Org",
  "filter": undefined,
  "fromPath": [
    "Org",
  ],
  "groupBy": [],
  "joins": [
    {
      "joinOn": [
        [
          "Org",
          "id",
        ],
        [
          "Org",
          "COUNT",
          "repos",
          "id",
          "__join_connection",
        ],
      ],
      "joinType": "left",
      "kind": "subquery",
      "namePath": [
        "Org",
        "COUNT",
        "repos",
        "id",
      ],
      "plan": {
        "entry": "Org",
        "fromPath": [
          "Org",
          "repos",
        ],
        "groupBy": [
          [
            "Org",
            "id",
          ],
        ],
        "joins": [
          {
            "joinOn": [
              [
                "Org",
                "id",
              ],
              [
                "Org",
                "repos",
                "org_id",
              ],
            ],
            "joinType": "left",
            "kind": "inline",
            "modelName": "Repo",
            "namePath": [
              "Org",
              "repos",
            ],
            "target": "repos",
          },
        ],
        "select": {
          "__join_connection": {
            "kind": "alias",
            "value": [
              "Org",
              "id",
            ],
          },
          "result": {
            "args": [
              {
                "kind": "alias",
                "value": [
                  "Org",
                  "repos",
                  "id",
                ],
              },
            ],
            "fnName": "count",
            "kind": "function",
          },
        },
      },
    },
  ],
  "limit": undefined,
  "offset": undefined,
  "orderBy": [
    [
      {
        "kind": "alias",
        "value": [
          "Org",
          "COUNT",
          "repos",
          "id",
          "result",
        ],
      },
      "asc",
    ],
  ],
  "select": {
    "id": {
      "kind": "alias",
      "value": [
        "Org",
        "id",
      ],
    },
  },
}
`;

exports[`Query plan order by expression: SQL snapshot 1`] = `
"SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.repos"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.repos.id" ON "Org"."id" = "Org.COUNT.repos.id"."__join_connection"
ORDER BY
  "Org.COUNT.repos.id"."result" asc"
`;

exports[`Query plan subqueries using partition/over: QueryPlan snapshot 1`] = `
{
  "entry": "Org",
  "filter": {
    "args": [
      {
        "kind": "alias",
        "value": [
          "Org",
          "SUM",
          "latest_repos",
          "collectedPoints",
          "result",
        ],
      },
      {
        "kind": "literal",
        "literal": {
          "kind": "integer",
          "value": 100,
        },
      },
    ],
    "fnName": ">",
    "kind": "function",
  },
  "fromPath": [
    "Org",
  ],
  "groupBy": [],
  "joins": [
    {
      "joinOn": [
        [
          "Org",
          "id",
        ],
        [
          "Org",
          "SUM",
          "latest_repos",
          "collectedPoints",
          "__join_connection",
        ],
      ],
      "joinType": "left",
      "kind": "subquery",
      "namePath": [
        "Org",
        "SUM",
        "latest_repos",
        "collectedPoints",
      ],
      "plan": {
        "entry": "Org",
        "fromPath": [
          "Org",
          "latest_repos",
        ],
        "groupBy": [
          [
            "Org",
            "id",
          ],
        ],
        "joins": [
          {
            "joinOn": [
              [
                "Org",
                "id",
              ],
              [
                "Org",
                "latest_repos",
                "__join_connection",
              ],
            ],
            "joinType": "left",
            "kind": "subquery",
            "namePath": [
              "Org",
              "latest_repos",
            ],
            "plan": {
              "entry": "Org",
              "filter": undefined,
              "fromPath": [
                "Org",
                "repos",
              ],
              "groupBy": [],
              "joins": [
                {
                  "joinOn": [
                    [
                      "Org",
                      "id",
                    ],
                    [
                      "Org",
                      "repos",
                      "org_id",
                    ],
                  ],
                  "joinType": "inner",
                  "kind": "inline",
                  "modelName": "Repo",
                  "namePath": [
                    "Org",
                    "repos",
                  ],
                  "target": "repos",
                },
              ],
              "limit": 5,
              "offset": undefined,
              "orderBy": [
                [
                  {
                    "kind": "alias",
                    "value": [
                      "Org",
                      "repos",
                      "id",
                    ],
                  },
                  "desc",
                ],
              ],
              "select": undefined,
            },
          },
        ],
        "select": {
          "__join_connection": {
            "kind": "alias",
            "value": [
              "Org",
              "id",
            ],
          },
          "result": {
            "args": [
              {
                "kind": "alias",
                "value": [
                  "Org",
                  "latest_repos",
                  "collectedpoints",
                ],
              },
            ],
            "fnName": "sum",
            "kind": "function",
          },
        },
      },
    },
  ],
  "limit": undefined,
  "offset": undefined,
  "orderBy": undefined,
  "select": {
    "id": {
      "kind": "alias",
      "value": [
        "Org",
        "id",
      ],
    },
  },
}
`;

exports[`Query plan subqueries using partition/over: SQL snapshot 1`] = `
"SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      sum("Org.latest_repos"."collectedpoints") AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN (
        SELECT
          *
        FROM
          (
            SELECT
              "Org.repos".*,
              "Org"."id" AS "__join_connection",
              ROW_NUMBER() OVER (
                PARTITION BY
                  "Org"."id"
                ORDER BY
                  "Org.repos"."id" desc
              ) AS "__row_number"
            FROM
              "org" AS "Org"
              INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
          ) AS topn
        WHERE
          topn."__row_number" <= 5
          AND topn."__row_number" > 0
      ) AS "Org.latest_repos" ON "Org"."id" = "Org.latest_repos"."__join_connection"
    GROUP BY
      "Org"."id"
  ) AS "Org.SUM.latest_repos.collectedPoints" ON "Org"."id" = "Org.SUM.latest_repos.collectedPoints"."__join_connection"
WHERE
  "Org.SUM.latest_repos.collectedPoints"."result" > 100"
`;

exports[`Query plan supports exists subqueries: QueryPlan snapshot 1`] = `
{
  "entry": "Org",
  "filter": {
    "args": [
      {
        "kind": "in-subquery",
        "lookupExpression": {
          "args": [
            {
              "kind": "literal",
              "literal": {
                "kind": "integer",
                "value": 5,
              },
            },
            {
              "kind": "literal",
              "literal": {
                "kind": "integer",
                "value": 1,
              },
            },
          ],
          "fnName": "+",
          "kind": "function",
        },
        "operator": "in",
        "plan": {
          "entry": "Org",
          "fromPath": [
            "Org",
            "repos",
            "org",
          ],
          "groupBy": [],
          "joins": [
            {
              "joinOn": [
                [
                  "Org",
                  "id",
                ],
                [
                  "Org",
                  "repos",
                  "org_id",
                ],
              ],
              "joinType": "inner",
              "kind": "inline",
              "modelName": "Repo",
              "namePath": [
                "Org",
                "repos",
              ],
              "target": "repos",
            },
            {
              "joinOn": [
                [
                  "Org",
                  "repos",
                  "org_id",
                ],
                [
                  "Org",
                  "repos",
                  "org",
                  "id",
                ],
              ],
              "joinType": "inner",
              "kind": "inline",
              "modelName": "Org",
              "namePath": [
                "Org",
                "repos",
                "org",
              ],
              "target": "org",
            },
          ],
          "select": {
            "target": {
              "kind": "alias",
              "value": [
                "Org",
                "repos",
                "org",
                "id",
              ],
            },
          },
        },
      },
      {
        "kind": "in-subquery",
        "lookupExpression": {
          "kind": "alias",
          "value": [
            "Org",
            "id",
          ],
        },
        "operator": "in",
        "plan": {
          "entry": "Org",
          "fromPath": [
            "Org",
            "repos",
            "org",
          ],
          "groupBy": [],
          "joins": [
            {
              "joinOn": [
                [
                  "Org",
                  "id",
                ],
                [
                  "Org",
                  "repos",
                  "org_id",
                ],
              ],
              "joinType": "inner",
              "kind": "inline",
              "modelName": "Repo",
              "namePath": [
                "Org",
                "repos",
              ],
              "target": "repos",
            },
            {
              "joinOn": [
                [
                  "Org",
                  "repos",
                  "org_id",
                ],
                [
                  "Org",
                  "repos",
                  "org",
                  "id",
                ],
              ],
              "joinType": "inner",
              "kind": "inline",
              "modelName": "Org",
              "namePath": [
                "Org",
                "repos",
                "org",
              ],
              "target": "org",
            },
          ],
          "select": {
            "target": {
              "kind": "alias",
              "value": [
                "Org",
                "repos",
                "org",
                "id",
              ],
            },
          },
        },
      },
    ],
    "fnName": "or",
    "kind": "function",
  },
  "fromPath": [
    "Org",
  ],
  "groupBy": [],
  "joins": [],
  "limit": undefined,
  "offset": undefined,
  "orderBy": undefined,
  "select": {
    "id": {
      "kind": "alias",
      "value": [
        "Org",
        "id",
      ],
    },
  },
}
`;

exports[`Query plan supports exists subqueries: SQL snapshot 1`] = `
"SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  (
    (5 + 1) IN (
      SELECT
        "Org.repos.org"."id" AS "target"
      FROM
        "org" AS "Org"
        INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
        INNER JOIN "org" AS "Org.repos.org" ON "Org.repos"."org_id" = "Org.repos.org"."id"
    )
    OR "Org"."id" IN (
      SELECT
        "Org.repos.org"."id" AS "target"
      FROM
        "org" AS "Org"
        INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
        INNER JOIN "org" AS "Org.repos.org" ON "Org.repos"."org_id" = "Org.repos.org"."id"
    )
  )"
`;

exports[`Query plan works with complex aggregates: QueryDef snapshot 1`] = `
{
  "filter": {
    "args": [
      {
        "args": [
          {
            "args": [
              {
                "fnName": "count",
                "kind": "aggregate-function",
                "sourcePath": [
                  "Org",
                  "repos",
                ],
                "targetPath": [
                  "issues",
                  "id",
                ],
                "type": {
                  "kind": "integer",
                  "nullable": false,
                },
              },
              {
                "fnName": "count",
                "kind": "aggregate-function",
                "sourcePath": [
                  "Org",
                  "repos",
                ],
                "targetPath": [
                  "issues",
                  "repo",
                  "id",
                ],
                "type": {
                  "kind": "integer",
                  "nullable": false,
                },
              },
            ],
            "kind": "function",
            "name": "+",
          },
          {
            "fnName": "sum",
            "kind": "aggregate-function",
            "sourcePath": [
              "Org",
              "repos",
            ],
            "targetPath": [
              "issues",
              "id",
            ],
            "type": {
              "kind": "integer",
              "nullable": false,
            },
          },
        ],
        "kind": "function",
        "name": "+",
      },
      {
        "args": [
          {
            "args": [
              {
                "fnName": "count",
                "kind": "aggregate-function",
                "sourcePath": [
                  "Org",
                  "repos",
                ],
                "targetPath": [
                  "issues",
                  "repo_name",
                ],
                "type": {
                  "kind": "integer",
                  "nullable": false,
                },
              },
              {
                "kind": "alias",
                "namePath": [
                  "Org",
                  "repos",
                  "ref_number",
                ],
              },
            ],
            "kind": "function",
            "name": "+",
          },
          {
            "fnName": "count",
            "kind": "aggregate-function",
            "sourcePath": [
              "Org",
            ],
            "targetPath": [
              "repos",
              "id",
            ],
            "type": {
              "kind": "integer",
              "nullable": false,
            },
          },
        ],
        "kind": "function",
        "name": "+",
      },
    ],
    "kind": "function",
    "name": ">",
  },
  "fromPath": [
    "Org",
    "repos",
  ],
  "kind": "query",
  "limit": undefined,
  "modelRefKey": "Org",
  "name": "$query",
  "offset": undefined,
  "orderBy": undefined,
  "refKey": "N/A",
  "retCardinality": "collection",
  "retType": "Repo",
  "select": [
    {
      "alias": "id",
      "expr": {
        "kind": "alias",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
    {
      "alias": "name",
      "expr": {
        "kind": "alias",
        "namePath": [
          "Org",
          "repos",
          "name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "org_name",
      "expr": {
        "kind": "alias",
        "namePath": [
          "Org",
          "repos",
          "org_name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "owner_name",
      "expr": {
        "kind": "alias",
        "namePath": [
          "Org",
          "owner",
          "full_name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
  ],
}
`;

exports[`Query plan works with complex aggregates: SQL snapshot 1`] = `
"SELECT
  "Org.repos"."id" AS "id",
  "Org.repos"."name" AS "name",
  "Org.repos.org"."name" AS "org_name",
  "Org.owner"."full_name" AS "owner_name"
FROM
  "org" AS "Org"
  INNER JOIN "owner" AS "Org.owner" ON "Org"."owner_id" = "Org.owner"."id"
  INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
  INNER JOIN "org" AS "Org.repos.org" ON "Org.repos"."org_id" = "Org.repos.org"."id"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.repos"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.repos.id" ON "Org"."id" = "Org.COUNT.repos.id"."__join_connection"
  LEFT JOIN (
    SELECT
      "Repo"."id" AS "__join_connection",
      COALESCE(count("Repo.issues"."id"), 0) AS "result"
    FROM
      "repo" AS "Repo"
      LEFT JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
    GROUP BY
      "Repo"."id"
  ) AS "Org.repos.COUNT.issues.id" ON "Org.repos"."id" = "Org.repos.COUNT.issues.id"."__join_connection"
  LEFT JOIN (
    SELECT
      "Repo"."id" AS "__join_connection",
      COALESCE(count("Repo.issues.repo"."id"), 0) AS "result"
    FROM
      "repo" AS "Repo"
      LEFT JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
      LEFT JOIN "repo" AS "Repo.issues.repo" ON "Repo.issues"."repo_id" = "Repo.issues.repo"."id"
    GROUP BY
      "Repo"."id"
  ) AS "Org.repos.COUNT.issues.repo.id" ON "Org.repos"."id" = "Org.repos.COUNT.issues.repo.id"."__join_connection"
  LEFT JOIN (
    SELECT
      "Repo"."id" AS "__join_connection",
      COALESCE(count("Repo.issues.repo"."name"), 0) AS "result"
    FROM
      "repo" AS "Repo"
      LEFT JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
      LEFT JOIN "repo" AS "Repo.issues.repo" ON "Repo.issues"."repo_id" = "Repo.issues.repo"."id"
    GROUP BY
      "Repo"."id"
  ) AS "Org.repos.COUNT.issues.repo_name" ON "Org.repos"."id" = "Org.repos.COUNT.issues.repo_name"."__join_connection"
  LEFT JOIN (
    SELECT
      "Repo"."id" AS "__join_connection",
      sum("Repo.issues"."id") AS "result"
    FROM
      "repo" AS "Repo"
      LEFT JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
    GROUP BY
      "Repo"."id"
  ) AS "Org.repos.SUM.issues.id" ON "Org.repos"."id" = "Org.repos.SUM.issues.id"."__join_connection"
WHERE
  (
    (
      "Org.repos.COUNT.issues.id"."result" + "Org.repos.COUNT.issues.repo.id"."result"
    ) + "Org.repos.SUM.issues.id"."result"
  ) > (
    (
      "Org.repos.COUNT.issues.repo_name"."result" + "Org.repos"."ref_number"
    ) + "Org.COUNT.repos.id"."result"
  )"
`;
