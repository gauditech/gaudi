// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Endpoint queries Deeply nested entrypoints test create endpoint 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "slug",
          ],
        },
        {
          "kind": "variable",
          "name": "org_slug",
          "type": {
            "nullable": false,
            "type": "text",
          },
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_0",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "repo_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_1",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Repo",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Issue",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Issue",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Issue",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Issue",
          "id",
        ],
        "refKey": "Issue.id",
      },
      {
        "alias": "name",
        "kind": "field",
        "name": "name",
        "namePath": [
          "Issue",
          "name",
        ],
        "refKey": "Issue.name",
      },
      {
        "alias": "repo_id",
        "kind": "field",
        "name": "repo_id",
        "namePath": [
          "Issue",
          "repo_id",
        ],
        "refKey": "Issue.repo_id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test create endpoint 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
WHERE
  "Org.repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo"."id" IN :@context_ids


",
  "SELECT
  "Issue"."id" AS "id",
  "Issue"."name" AS "name",
  "Issue"."repo_id" AS "repo_id"
FROM
  "issue" AS "Issue"
WHERE
  "Issue"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries Deeply nested entrypoints test create endpoint 3`] = `
{
  "alias": "$target_2",
  "kind": "relation",
  "name": "issues",
  "namePath": [
    "Org",
    "repos",
    "issues",
  ],
  "refKey": "Repo.issues",
  "retType": "Issue",
  "select": [],
}
`;

exports[`Endpoint queries Deeply nested entrypoints test create endpoint 4`] = `
[
  {
    "alias": "$target_0",
    "identifyWith": {
      "name": "slug",
      "paramName": "org_slug",
      "refKey": "Org.slug",
      "type": "text",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "refKey": "Org",
    "retType": "Org",
    "select": [],
  },
  {
    "alias": "$target_1",
    "identifyWith": {
      "name": "id",
      "paramName": "repo_id",
      "refKey": "Repo.id",
      "type": "integer",
    },
    "kind": "relation",
    "name": "repos",
    "namePath": [
      "Org",
      "repos",
    ],
    "refKey": "Org.repos",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test delete endpoint 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "slug",
          ],
        },
        {
          "kind": "variable",
          "name": "org_slug",
          "type": {
            "nullable": false,
            "type": "text",
          },
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_0",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "repo_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_1",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "issues",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "issue_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Issue",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Issue",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Issue",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Issue",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test delete endpoint 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
WHERE
  "Org.repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo.issues"."id" = :issue_id
  AND "Repo"."id" IN :@context_ids


",
  "SELECT
  "Issue"."id" AS "id"
FROM
  "issue" AS "Issue"
WHERE
  "Issue"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries Deeply nested entrypoints test delete endpoint 3`] = `
{
  "alias": "$target_2",
  "identifyWith": {
    "name": "id",
    "paramName": "issue_id",
    "refKey": "Issue.id",
    "type": "integer",
  },
  "kind": "relation",
  "name": "issues",
  "namePath": [
    "Org",
    "repos",
    "issues",
  ],
  "refKey": "Repo.issues",
  "retType": "Issue",
  "select": [],
}
`;

exports[`Endpoint queries Deeply nested entrypoints test delete endpoint 4`] = `
[
  {
    "alias": "$target_0",
    "identifyWith": {
      "name": "slug",
      "paramName": "org_slug",
      "refKey": "Org.slug",
      "type": "text",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "refKey": "Org",
    "retType": "Org",
    "select": [],
  },
  {
    "alias": "$target_1",
    "identifyWith": {
      "name": "id",
      "paramName": "repo_id",
      "refKey": "Repo.id",
      "type": "integer",
    },
    "kind": "relation",
    "name": "repos",
    "namePath": [
      "Org",
      "repos",
    ],
    "refKey": "Org.repos",
    "retType": "Repo",
    "select": [],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test get endpoint 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "slug",
          ],
        },
        {
          "kind": "variable",
          "name": "org_slug",
          "type": {
            "nullable": false,
            "type": "text",
          },
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_0",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "repo_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_1",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "issues",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "issue_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Issue",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Issue",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Issue",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Issue",
          "id",
        ],
        "refKey": "Issue.id",
      },
      {
        "alias": "name",
        "kind": "field",
        "name": "name",
        "namePath": [
          "Issue",
          "name",
        ],
        "refKey": "Issue.name",
      },
      {
        "alias": "repo_id",
        "kind": "field",
        "name": "repo_id",
        "namePath": [
          "Issue",
          "repo_id",
        ],
        "refKey": "Issue.repo_id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test get endpoint 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
WHERE
  "Org.repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo.issues"."id" = :issue_id
  AND "Repo"."id" IN :@context_ids


",
  "SELECT
  "Issue"."id" AS "id",
  "Issue"."name" AS "name",
  "Issue"."repo_id" AS "repo_id"
FROM
  "issue" AS "Issue"
WHERE
  "Issue"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries Deeply nested entrypoints test get endpoint 3`] = `
{
  "alias": "$target_2",
  "identifyWith": {
    "name": "id",
    "paramName": "issue_id",
    "refKey": "Issue.id",
    "type": "integer",
  },
  "kind": "relation",
  "name": "issues",
  "namePath": [
    "Org",
    "repos",
    "issues",
  ],
  "refKey": "Repo.issues",
  "retType": "Issue",
  "select": [],
}
`;

exports[`Endpoint queries Deeply nested entrypoints test get endpoint 4`] = `
[
  {
    "alias": "$target_0",
    "identifyWith": {
      "name": "slug",
      "paramName": "org_slug",
      "refKey": "Org.slug",
      "type": "text",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "refKey": "Org",
    "retType": "Org",
    "select": [],
  },
  {
    "alias": "$target_1",
    "identifyWith": {
      "name": "id",
      "paramName": "repo_id",
      "refKey": "Repo.id",
      "type": "integer",
    },
    "kind": "relation",
    "name": "repos",
    "namePath": [
      "Org",
      "repos",
    ],
    "refKey": "Org.repos",
    "retType": "Repo",
    "select": [],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test list endpoint 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "slug",
          ],
        },
        {
          "kind": "variable",
          "name": "org_slug",
          "type": {
            "nullable": false,
            "type": "text",
          },
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_0",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "repo_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_1",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Repo",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Repo",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
      {
        "alias": "name",
        "kind": "field",
        "name": "name",
        "namePath": [
          "Repo",
          "issues",
          "name",
        ],
        "refKey": "Issue.name",
      },
      {
        "alias": "repo_id",
        "kind": "field",
        "name": "repo_id",
        "namePath": [
          "Repo",
          "issues",
          "repo_id",
        ],
        "refKey": "Issue.repo_id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test list endpoint 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
WHERE
  "Org.repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id",
  "Repo.issues"."name" AS "name",
  "Repo.issues"."repo_id" AS "repo_id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries Deeply nested entrypoints test list endpoint 3`] = `
{
  "alias": "$target_2",
  "kind": "relation",
  "name": "issues",
  "namePath": [
    "Org",
    "repos",
    "issues",
  ],
  "refKey": "Repo.issues",
  "retType": "Issue",
  "select": [],
}
`;

exports[`Endpoint queries Deeply nested entrypoints test list endpoint 4`] = `
[
  {
    "alias": "$target_0",
    "identifyWith": {
      "name": "slug",
      "paramName": "org_slug",
      "refKey": "Org.slug",
      "type": "text",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "refKey": "Org",
    "retType": "Org",
    "select": [],
  },
  {
    "alias": "$target_1",
    "identifyWith": {
      "name": "id",
      "paramName": "repo_id",
      "refKey": "Repo.id",
      "type": "integer",
    },
    "kind": "relation",
    "name": "repos",
    "namePath": [
      "Org",
      "repos",
    ],
    "refKey": "Org.repos",
    "retType": "Repo",
    "select": [],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test update endpoint 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "slug",
          ],
        },
        {
          "kind": "variable",
          "name": "org_slug",
          "type": {
            "nullable": false,
            "type": "text",
          },
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_0",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "repo_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$target_1",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Repo",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
        "refKey": "Repo.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "issues",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "issue_id",
              "type": {
                "nullable": false,
                "type": "integer",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Repo",
                "id",
              ],
            },
            {
              "kind": "variable",
              "name": "@context_ids",
              "type": {
                "nullable": false,
                "type": "list-integer",
              },
            },
          ],
          "kind": "function",
          "name": "in",
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Repo",
      "issues",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Repo",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Repo",
          "issues",
          "id",
        ],
        "refKey": "Issue.id",
      },
    ],
  },
  {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Issue",
            "id",
          ],
        },
        {
          "kind": "variable",
          "name": "@context_ids",
          "type": {
            "nullable": false,
            "type": "list-integer",
          },
        },
      ],
      "kind": "function",
      "name": "in",
    },
    "fromPath": [
      "Issue",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Issue",
    "name": "$target_2",
    "orderBy": undefined,
    "refKey": "N/A",
    "retType": "Issue",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "Issue",
          "id",
        ],
        "refKey": "Issue.id",
      },
      {
        "alias": "name",
        "kind": "field",
        "name": "name",
        "namePath": [
          "Issue",
          "name",
        ],
        "refKey": "Issue.name",
      },
      {
        "alias": "repo_id",
        "kind": "field",
        "name": "repo_id",
        "namePath": [
          "Issue",
          "repo_id",
        ],
        "refKey": "Issue.repo_id",
      },
    ],
  },
]
`;

exports[`Endpoint queries Deeply nested entrypoints test update endpoint 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
WHERE
  "Org.repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Repo.issues"."id" AS "id"
FROM
  "repo" AS "Repo"
  JOIN "issue" AS "Repo.issues" ON "Repo"."id" = "Repo.issues"."repo_id"
WHERE
  "Repo.issues"."id" = :issue_id
  AND "Repo"."id" IN :@context_ids


",
  "SELECT
  "Issue"."id" AS "id",
  "Issue"."name" AS "name",
  "Issue"."repo_id" AS "repo_id"
FROM
  "issue" AS "Issue"
WHERE
  "Issue"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries Deeply nested entrypoints test update endpoint 3`] = `
{
  "alias": "$target_2",
  "identifyWith": {
    "name": "id",
    "paramName": "issue_id",
    "refKey": "Issue.id",
    "type": "integer",
  },
  "kind": "relation",
  "name": "issues",
  "namePath": [
    "Org",
    "repos",
    "issues",
  ],
  "refKey": "Repo.issues",
  "retType": "Issue",
  "select": [
    {
      "alias": "id",
      "kind": "field",
      "name": "id",
      "namePath": [
        "Org",
        "repos",
        "issues",
        "id",
      ],
      "refKey": "Issue.id",
    },
  ],
}
`;

exports[`Endpoint queries Deeply nested entrypoints test update endpoint 4`] = `
[
  {
    "alias": "$target_0",
    "identifyWith": {
      "name": "slug",
      "paramName": "org_slug",
      "refKey": "Org.slug",
      "type": "text",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "refKey": "Org",
    "retType": "Org",
    "select": [],
  },
  {
    "alias": "$target_1",
    "identifyWith": {
      "name": "id",
      "paramName": "repo_id",
      "refKey": "Repo.id",
      "type": "integer",
    },
    "kind": "relation",
    "name": "repos",
    "namePath": [
      "Org",
      "repos",
    ],
    "refKey": "Org.repos",
    "retType": "Repo",
    "select": [],
  },
]
`;

exports[`Endpoint queries chained nested query 1`] = `
{
  "parentContextQueryTrees": [
    {
      "alias": "$target_0",
      "hooks": [],
      "name": "$target_0",
      "query": {
        "filter": {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "slug",
              ],
            },
            {
              "kind": "variable",
              "name": "org_slug",
              "type": {
                "nullable": false,
                "type": "text",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        "fromPath": [
          "Org",
        ],
        "kind": "query",
        "limit": undefined,
        "modelRefKey": "Org",
        "name": "$target_0",
        "orderBy": undefined,
        "refKey": "N/A",
        "retType": "Org",
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "Org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
      "related": [],
    },
  ],
  "responseQueryTree": {
    "alias": "$target_1",
    "hooks": [],
    "name": "$target_1",
    "query": {
      "filter": {
        "args": [
          {
            "kind": "alias",
            "namePath": [
              "Issue",
              "id",
            ],
          },
          {
            "kind": "variable",
            "name": "@context_ids",
            "type": {
              "nullable": false,
              "type": "list-integer",
            },
          },
        ],
        "kind": "function",
        "name": "in",
      },
      "fromPath": [
        "Issue",
      ],
      "kind": "query",
      "limit": undefined,
      "modelRefKey": "Issue",
      "name": "$target_1",
      "orderBy": undefined,
      "refKey": "N/A",
      "retType": "Issue",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Issue",
            "id",
          ],
          "refKey": "Issue.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Issue",
            "name",
          ],
          "refKey": "Issue.name",
        },
      ],
    },
    "related": [
      {
        "alias": "repo",
        "hooks": [],
        "name": "repo",
        "query": {
          "filter": {
            "args": [
              {
                "kind": "alias",
                "namePath": [
                  "Issue",
                  "id",
                ],
              },
              {
                "kind": "variable",
                "name": "@context_ids",
                "type": {
                  "nullable": false,
                  "type": "list-integer",
                },
              },
            ],
            "kind": "function",
            "name": "in",
          },
          "fromPath": [
            "Issue",
            "repo",
          ],
          "kind": "query",
          "limit": undefined,
          "modelRefKey": "Issue",
          "name": "repo",
          "orderBy": undefined,
          "refKey": "N/A",
          "retType": "Repo",
          "select": [
            {
              "alias": "name",
              "kind": "field",
              "name": "name",
              "namePath": [
                "Issue",
                "repo",
                "name",
              ],
              "refKey": "Repo.name",
            },
            {
              "alias": "is_public",
              "kind": "field",
              "name": "is_public",
              "namePath": [
                "Issue",
                "repo",
                "is_public",
              ],
              "refKey": "Repo.is_public",
            },
            {
              "alias": "__join_connection",
              "kind": "field",
              "name": "id",
              "namePath": [
                "Issue",
                "id",
              ],
              "refKey": "Issue.id",
            },
          ],
        },
        "related": [
          {
            "alias": "org",
            "hooks": [],
            "name": "org",
            "query": {
              "filter": {
                "args": [
                  {
                    "kind": "alias",
                    "namePath": [
                      "Repo",
                      "id",
                    ],
                  },
                  {
                    "kind": "variable",
                    "name": "@context_ids",
                    "type": {
                      "nullable": false,
                      "type": "list-integer",
                    },
                  },
                ],
                "kind": "function",
                "name": "in",
              },
              "fromPath": [
                "Repo",
                "org",
              ],
              "kind": "query",
              "limit": undefined,
              "modelRefKey": "Repo",
              "name": "org",
              "orderBy": undefined,
              "refKey": "N/A",
              "retType": "Org",
              "select": [
                {
                  "alias": "id",
                  "kind": "field",
                  "name": "id",
                  "namePath": [
                    "Repo",
                    "org",
                    "id",
                  ],
                  "refKey": "Org.id",
                },
                {
                  "alias": "slug",
                  "kind": "field",
                  "name": "slug",
                  "namePath": [
                    "Repo",
                    "org",
                    "slug",
                  ],
                  "refKey": "Org.slug",
                },
                {
                  "alias": "__join_connection",
                  "kind": "field",
                  "name": "id",
                  "namePath": [
                    "Repo",
                    "id",
                  ],
                  "refKey": "Repo.id",
                },
              ],
            },
            "related": [],
          },
        ],
      },
    ],
  },
  "targetQueryTree": {
    "alias": "$target_1",
    "hooks": [],
    "name": "$target_1",
    "query": {
      "filter": {
        "args": [
          {
            "args": [
              {
                "kind": "alias",
                "namePath": [
                  "Org",
                  "public_issues",
                  "id",
                ],
              },
              {
                "kind": "variable",
                "name": "issue_id",
                "type": {
                  "nullable": false,
                  "type": "integer",
                },
              },
            ],
            "kind": "function",
            "name": "is",
          },
          {
            "args": [
              {
                "kind": "alias",
                "namePath": [
                  "Org",
                  "id",
                ],
              },
              {
                "kind": "variable",
                "name": "@context_ids",
                "type": {
                  "nullable": false,
                  "type": "list-integer",
                },
              },
            ],
            "kind": "function",
            "name": "in",
          },
        ],
        "kind": "function",
        "name": "and",
      },
      "fromPath": [
        "Org",
        "public_issues",
      ],
      "kind": "query",
      "limit": undefined,
      "modelRefKey": "Org",
      "name": "$target_1",
      "orderBy": undefined,
      "refKey": "N/A",
      "retType": "Issue",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_issues",
            "id",
          ],
          "refKey": "Issue.id",
        },
      ],
    },
    "related": [],
  },
}
`;

exports[`Endpoint queries chained nested query 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug


",
  "SELECT
  "Org.public_issues"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN (
    SELECT
      "Org.public_repos.issues"."id" AS "id",
      "Org.public_repos.issues"."name" AS "name",
      "Org.public_repos.issues"."repo_id" AS "repo_id",
      "Org"."id" AS "__join_connection"
    FROM
      "org" AS "Org"
      JOIN (
        SELECT
          "Org.repos"."id" AS "id",
          "Org.repos"."is_public" AS "is_public",
          "Org.repos"."name" AS "name",
          "Org.repos"."org_id" AS "org_id",
          "Org"."id" AS "__join_connection"
        FROM
          "org" AS "Org"
          JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
        WHERE
          "Org.repos"."is_public" = TRUE
      ) AS "Org.public_repos" ON "Org"."id" = "Org.public_repos"."__join_connection"
      JOIN "issue" AS "Org.public_repos.issues" ON "Org.public_repos"."id" = "Org.public_repos.issues"."repo_id"
  ) AS "Org.public_issues" ON "Org"."id" = "Org.public_issues"."__join_connection"
WHERE
  "Org.public_issues"."id" = :issue_id
  AND "Org"."id" IN :@context_ids


",
  "SELECT
  "Issue"."id" AS "id",
  "Issue"."name" AS "name"
FROM
  "issue" AS "Issue"
WHERE
  "Issue"."id" IN :@context_ids


",
  "SELECT
  "Issue.repo"."name" AS "name",
  "Issue.repo"."is_public" AS "is_public",
  "Issue"."id" AS "__join_connection"
FROM
  "issue" AS "Issue"
  JOIN "repo" AS "Issue.repo" ON "Issue"."repo_id" = "Issue.repo"."id"
WHERE
  "Issue"."id" IN :@context_ids


",
  "SELECT
  "Repo.org"."id" AS "id",
  "Repo.org"."slug" AS "slug",
  "Repo"."id" AS "__join_connection"
FROM
  "repo" AS "Repo"
  JOIN "org" AS "Repo.org" ON "Repo"."org_id" = "Repo.org"."id"
WHERE
  "Repo"."id" IN :@context_ids


",
]
`;

exports[`Endpoint queries nested query 1`] = `
{
  "parentContextQueryTrees": [
    {
      "alias": "$target_0",
      "hooks": [],
      "name": "$target_0",
      "query": {
        "filter": {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "slug",
              ],
            },
            {
              "kind": "variable",
              "name": "org_slug",
              "type": {
                "nullable": false,
                "type": "text",
              },
            },
          ],
          "kind": "function",
          "name": "is",
        },
        "fromPath": [
          "Org",
        ],
        "kind": "query",
        "limit": undefined,
        "modelRefKey": "Org",
        "name": "$target_0",
        "orderBy": undefined,
        "refKey": "N/A",
        "retType": "Org",
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "Org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
      "related": [],
    },
  ],
  "responseQueryTree": {
    "alias": "$target_1",
    "hooks": [],
    "name": "$target_1",
    "query": {
      "filter": {
        "args": [
          {
            "kind": "alias",
            "namePath": [
              "Repo",
              "id",
            ],
          },
          {
            "kind": "variable",
            "name": "@context_ids",
            "type": {
              "nullable": false,
              "type": "list-integer",
            },
          },
        ],
        "kind": "function",
        "name": "in",
      },
      "fromPath": [
        "Repo",
      ],
      "kind": "query",
      "limit": undefined,
      "modelRefKey": "Repo",
      "name": "$target_1",
      "orderBy": undefined,
      "refKey": "N/A",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Repo",
            "id",
          ],
          "refKey": "Repo.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Repo",
            "name",
          ],
          "refKey": "Repo.name",
        },
      ],
    },
    "related": [],
  },
  "targetQueryTree": {
    "alias": "$target_1",
    "hooks": [],
    "name": "$target_1",
    "query": {
      "filter": {
        "args": [
          {
            "args": [
              {
                "kind": "alias",
                "namePath": [
                  "Org",
                  "public_repos",
                  "id",
                ],
              },
              {
                "kind": "variable",
                "name": "repo_id",
                "type": {
                  "nullable": false,
                  "type": "integer",
                },
              },
            ],
            "kind": "function",
            "name": "is",
          },
          {
            "args": [
              {
                "kind": "alias",
                "namePath": [
                  "Org",
                  "id",
                ],
              },
              {
                "kind": "variable",
                "name": "@context_ids",
                "type": {
                  "nullable": false,
                  "type": "list-integer",
                },
              },
            ],
            "kind": "function",
            "name": "in",
          },
        ],
        "kind": "function",
        "name": "and",
      },
      "fromPath": [
        "Org",
        "public_repos",
      ],
      "kind": "query",
      "limit": undefined,
      "modelRefKey": "Org",
      "name": "$target_1",
      "orderBy": undefined,
      "refKey": "N/A",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_repos",
            "id",
          ],
          "refKey": "Repo.id",
        },
      ],
    },
    "related": [],
  },
}
`;

exports[`Endpoint queries nested query 2`] = `
[
  "SELECT
  "Org"."id" AS "id"
FROM
  "org" AS "Org"
WHERE
  "Org"."slug" = :org_slug",
  "SELECT
  "Org.public_repos"."id" AS "id"
FROM
  "org" AS "Org"
  JOIN (
    SELECT
      "Org.repos"."id" AS "id",
      "Org.repos"."is_public" AS "is_public",
      "Org.repos"."name" AS "name",
      "Org.repos"."org_id" AS "org_id",
      "Org"."id" AS "__join_connection"
    FROM
      "org" AS "Org"
      JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
    WHERE
      "Org.repos"."is_public" = TRUE
  ) AS "Org.public_repos" ON "Org"."id" = "Org.public_repos"."__join_connection"
WHERE
  "Org.public_repos"."id" = :repo_id
  AND "Org"."id" IN :@context_ids",
  "SELECT
  "Repo"."id" AS "id",
  "Repo"."name" AS "name"
FROM
  "repo" AS "Repo"
WHERE
  "Repo"."id" IN :@context_ids",
]
`;

exports[`Order and limit Supports limit and order in non-batching query 1`] = `
"SELECT
FROM
  "org" AS "Org"
  JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
ORDER BY
  "Org.repos"."id" desc
LIMIT
  10"
`;
