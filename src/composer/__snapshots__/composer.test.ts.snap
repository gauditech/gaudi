// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compose models parses model references 1`] = `
[
  {
    "aggregates": [],
    "computeds": [],
    "dbname": "parentitem",
    "fields": [
      {
        "dbname": "id",
        "kind": "field",
        "modelRefKey": "ParentItem",
        "name": "id",
        "nullable": false,
        "primary": true,
        "refKey": "ParentItem.id",
        "type": "integer",
        "unique": true,
        "validators": [],
      },
      {
        "dbname": "itemnoaction_id",
        "kind": "field",
        "modelRefKey": "ParentItem",
        "name": "itemNoAction_id",
        "nullable": false,
        "primary": false,
        "refKey": "ParentItem.itemNoAction_id",
        "type": "integer",
        "unique": false,
        "validators": [],
      },
      {
        "dbname": "itemcascade_id",
        "kind": "field",
        "modelRefKey": "ParentItem",
        "name": "itemCascade_id",
        "nullable": false,
        "primary": false,
        "refKey": "ParentItem.itemCascade_id",
        "type": "integer",
        "unique": false,
        "validators": [],
      },
      {
        "dbname": "itemsetnull_id",
        "kind": "field",
        "modelRefKey": "ParentItem",
        "name": "itemSetNull_id",
        "nullable": true,
        "primary": false,
        "refKey": "ParentItem.itemSetNull_id",
        "type": "integer",
        "unique": false,
        "validators": [],
      },
    ],
    "hooks": [],
    "kind": "model",
    "name": "ParentItem",
    "queries": [],
    "refKey": "ParentItem",
    "references": [
      {
        "fieldRefKey": "ParentItem.itemNoAction_id",
        "kind": "reference",
        "modelRefKey": "ParentItem",
        "name": "itemNoAction",
        "nullable": false,
        "onDelete": undefined,
        "refKey": "ParentItem.itemNoAction",
        "toModelFieldRefKey": "ReferencedItem1.id",
        "toModelRefKey": "ReferencedItem1",
        "unique": false,
      },
      {
        "fieldRefKey": "ParentItem.itemCascade_id",
        "kind": "reference",
        "modelRefKey": "ParentItem",
        "name": "itemCascade",
        "nullable": false,
        "onDelete": "cascade",
        "refKey": "ParentItem.itemCascade",
        "toModelFieldRefKey": "ReferencedItem2.id",
        "toModelRefKey": "ReferencedItem2",
        "unique": false,
      },
      {
        "fieldRefKey": "ParentItem.itemSetNull_id",
        "kind": "reference",
        "modelRefKey": "ParentItem",
        "name": "itemSetNull",
        "nullable": true,
        "onDelete": "setNull",
        "refKey": "ParentItem.itemSetNull",
        "toModelFieldRefKey": "ReferencedItem3.id",
        "toModelRefKey": "ReferencedItem3",
        "unique": false,
      },
    ],
    "relations": [],
  },
  {
    "aggregates": [],
    "computeds": [],
    "dbname": "referenceditem1",
    "fields": [
      {
        "dbname": "id",
        "kind": "field",
        "modelRefKey": "ReferencedItem1",
        "name": "id",
        "nullable": false,
        "primary": true,
        "refKey": "ReferencedItem1.id",
        "type": "integer",
        "unique": true,
        "validators": [],
      },
    ],
    "hooks": [],
    "kind": "model",
    "name": "ReferencedItem1",
    "queries": [],
    "refKey": "ReferencedItem1",
    "references": [],
    "relations": [
      {
        "fromModel": "ParentItem",
        "fromModelRefKey": "ParentItem",
        "kind": "relation",
        "modelRefKey": "ReferencedItem1",
        "name": "parent",
        "refKey": "ReferencedItem1.parent",
        "through": "itemNoAction",
        "throughRefKey": "ParentItem.itemNoAction",
        "unique": false,
      },
    ],
  },
  {
    "aggregates": [],
    "computeds": [],
    "dbname": "referenceditem2",
    "fields": [
      {
        "dbname": "id",
        "kind": "field",
        "modelRefKey": "ReferencedItem2",
        "name": "id",
        "nullable": false,
        "primary": true,
        "refKey": "ReferencedItem2.id",
        "type": "integer",
        "unique": true,
        "validators": [],
      },
    ],
    "hooks": [],
    "kind": "model",
    "name": "ReferencedItem2",
    "queries": [],
    "refKey": "ReferencedItem2",
    "references": [],
    "relations": [
      {
        "fromModel": "ParentItem",
        "fromModelRefKey": "ParentItem",
        "kind": "relation",
        "modelRefKey": "ReferencedItem2",
        "name": "parent",
        "refKey": "ReferencedItem2.parent",
        "through": "itemCascade",
        "throughRefKey": "ParentItem.itemCascade",
        "unique": false,
      },
    ],
  },
  {
    "aggregates": [],
    "computeds": [],
    "dbname": "referenceditem3",
    "fields": [
      {
        "dbname": "id",
        "kind": "field",
        "modelRefKey": "ReferencedItem3",
        "name": "id",
        "nullable": false,
        "primary": true,
        "refKey": "ReferencedItem3.id",
        "type": "integer",
        "unique": true,
        "validators": [],
      },
    ],
    "hooks": [],
    "kind": "model",
    "name": "ReferencedItem3",
    "queries": [],
    "refKey": "ReferencedItem3",
    "references": [],
    "relations": [
      {
        "fromModel": "ParentItem",
        "fromModelRefKey": "ParentItem",
        "kind": "relation",
        "modelRefKey": "ReferencedItem3",
        "name": "parent",
        "refKey": "ReferencedItem3.parent",
        "through": "itemSetNull",
        "throughRefKey": "ParentItem.itemSetNull",
        "unique": false,
      },
    ],
  },
]
`;

exports[`compose models parses validators 1`] = `
[
  {
    "aggregates": [],
    "computeds": [],
    "dbname": "org",
    "fields": [
      {
        "dbname": "id",
        "kind": "field",
        "modelRefKey": "Org",
        "name": "id",
        "nullable": false,
        "primary": true,
        "refKey": "Org.id",
        "type": "integer",
        "unique": true,
        "validators": [],
      },
      {
        "dbname": "adminemail",
        "kind": "field",
        "modelRefKey": "Org",
        "name": "adminEmail",
        "nullable": false,
        "primary": false,
        "refKey": "Org.adminEmail",
        "type": "string",
        "unique": false,
        "validators": [
          {
            "args": [
              {
                "kind": "integer",
                "value": 4,
              },
            ],
            "inputType": "string",
            "name": "minLength",
          },
          {
            "args": [
              {
                "kind": "integer",
                "value": 100,
              },
            ],
            "inputType": "string",
            "name": "maxLength",
          },
          {
            "args": [],
            "inputType": "string",
            "name": "isEmail",
          },
        ],
      },
      {
        "dbname": "num_employees",
        "kind": "field",
        "modelRefKey": "Org",
        "name": "num_employees",
        "nullable": false,
        "primary": false,
        "refKey": "Org.num_employees",
        "type": "integer",
        "unique": false,
        "validators": [
          {
            "args": [
              {
                "kind": "integer",
                "value": 0,
              },
            ],
            "inputType": "integer",
            "name": "minInt",
          },
          {
            "args": [
              {
                "kind": "integer",
                "value": 9999,
              },
            ],
            "inputType": "integer",
            "name": "maxInt",
          },
        ],
      },
    ],
    "hooks": [],
    "kind": "model",
    "name": "Org",
    "queries": [],
    "refKey": "Org",
    "references": [],
    "relations": [],
  },
]
`;
