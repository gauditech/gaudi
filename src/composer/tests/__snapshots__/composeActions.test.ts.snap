// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compose actions custom actions creates actions in custom endpoint 1`] = `
[
  {
    "actions": [],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-one",
    "method": "GET",
    "parentContext": [],
    "path": "customGet",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "name": "id",
        "paramName": "org_id",
        "refKey": "Org.id",
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "refKey": "Org",
      "retType": "Org",
      "select": [],
    },
  },
  {
    "actions": [
      {
        "alias": "newOrg",
        "changeset": [
          {
            "name": "name",
            "setter": {
              "fieldsetAccess": [
                "newOrg",
                "name",
              ],
              "kind": "fieldset-input",
              "required": false,
              "type": "text",
            },
          },
        ],
        "filter": undefined,
        "kind": "update-one",
        "model": "Org",
        "select": [],
        "targetPath": [
          "org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": {
      "kind": "record",
      "nullable": false,
      "record": {
        "newOrg": {
          "kind": "record",
          "nullable": false,
          "record": {
            "name": {
              "kind": "field",
              "nullable": false,
              "required": false,
              "type": "text",
              "validators": [],
            },
          },
        },
      },
    },
    "kind": "custom-one",
    "method": "PATCH",
    "parentContext": [],
    "path": "customUpdate",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "name": "id",
        "paramName": "org_id",
        "refKey": "Org.id",
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "refKey": "Org",
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "id",
          ],
          "refKey": "Org.id",
        },
      ],
    },
  },
  {
    "actions": [
      {
        "kind": "delete-one",
        "model": "Org",
        "targetPath": [
          "org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-one",
    "method": "DELETE",
    "parentContext": [],
    "path": "customDelete",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "name": "id",
        "paramName": "org_id",
        "refKey": "Org.id",
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "refKey": "Org",
      "retType": "Org",
      "select": [],
    },
  },
  {
    "actions": [],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-many",
    "method": "GET",
    "parentContext": [],
    "path": "customList",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "refKey": "Org",
      "retType": "Org",
      "select": [],
    },
  },
  {
    "actions": [
      {
        "alias": "org",
        "changeset": [
          {
            "name": "name",
            "setter": {
              "fieldsetAccess": [
                "org",
                "name",
              ],
              "kind": "fieldset-input",
              "required": true,
              "type": "text",
            },
          },
        ],
        "kind": "create-one",
        "model": "Org",
        "select": [],
        "targetPath": [
          "Org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": {
      "kind": "record",
      "nullable": false,
      "record": {
        "org": {
          "kind": "record",
          "nullable": false,
          "record": {
            "name": {
              "kind": "field",
              "nullable": false,
              "required": true,
              "type": "text",
              "validators": [],
            },
          },
        },
      },
    },
    "kind": "custom-many",
    "method": "POST",
    "parentContext": [],
    "path": "customCreate",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "refKey": "Org",
      "retType": "Org",
      "select": [],
    },
  },
]
`;

exports[`compose actions native actions can create nested relations through transient references 1`] = `
[
  {
    "alias": "repo",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "org_id",
        "setter": {
          "fieldsetAccess": [
            "org_id",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "Repo",
    "select": [
      {
        "alias": "org",
        "kind": "reference",
        "name": "org",
        "namePath": [
          "repo",
          "org",
        ],
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "repo",
              "org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
    ],
    "targetPath": [
      "repo",
    ],
  },
  {
    "alias": "log",
    "changeset": [
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "org",
              "id",
            ],
            "alias": "repo",
          },
        },
      },
    ],
    "kind": "create-one",
    "model": "OrgLog",
    "select": [],
    "targetPath": [
      "repo",
      "org",
      "logs",
    ],
  },
]
`;

exports[`compose actions native actions can update deeply nested references 1`] = `
[
  {
    "alias": "$issue",
    "changeset": [
      {
        "name": "repo_id",
        "setter": {
          "fieldsetAccess": [
            "repo_id",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "integer",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Issue",
    "select": [],
    "targetPath": [
      "issue",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "org",
            "name",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "issue",
      "repo",
      "org",
    ],
  },
]
`;

exports[`compose actions native actions correctly sets parent context 1`] = `
[
  {
    "alias": "myrepo",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "myorg",
          },
        },
      },
    ],
    "kind": "create-one",
    "model": "Repo",
    "select": [],
    "targetPath": [
      "myrepo",
    ],
  },
]
`;

exports[`compose actions native actions sets default action if not given 1`] = `
[
  {
    "alias": "$org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds for basic composite create 1`] = `
[
  {
    "alias": "e",
    "changeset": [],
    "kind": "create-one",
    "model": "OrgExtra",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "e",
          "id",
        ],
        "refKey": "OrgExtra.id",
      },
    ],
    "targetPath": [
      "OrgExtra",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "is_new",
        "setter": {
          "kind": "literal",
          "type": "boolean",
          "value": true,
        },
      },
      {
        "name": "extras_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "e",
          },
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
    "targetPath": [
      "org",
    ],
  },
  {
    "alias": "oo",
    "changeset": [
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "org",
          },
        },
      },
    ],
    "kind": "create-one",
    "model": "OrgOwner",
    "select": [],
    "targetPath": [
      "OrgOwner",
    ],
  },
]
`;

exports[`compose actions native actions succeeds for basic update with a deny rule 1`] = `
[
  {
    "alias": "ox",
    "changeset": [
      {
        "name": "description",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "description",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "extras_id",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "extras_id",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "integer",
        },
      },
      {
        "name": "name",
        "setter": {
          "kind": "literal",
          "type": "text",
          "value": "new name",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds when virtual input is defined and referenced 1`] = `
[
  {
    "alias": "org",
    "changeset": [
      {
        "name": "iname",
        "setter": {
          "fieldsetAccess": [
            "iname",
          ],
          "kind": "fieldset-virtual-input",
          "nullable": false,
          "required": true,
          "type": "text",
          "validators": [
            {
              "args": [
                {
                  "type": "integer",
                  "value": 4,
                },
              ],
              "inputType": "text",
              "name": "minLength",
            },
          ],
        },
      },
      {
        "name": "name",
        "setter": {
          "args": [
            {
              "kind": "literal",
              "type": "text",
              "value": "Mr/Mrs ",
            },
            {
              "kind": "changeset-reference",
              "referenceName": "iname",
            },
          ],
          "kind": "function",
          "name": "concat",
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with arithmetic expressions in setters 1`] = `
[
  {
    "alias": "org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "kind": "literal",
          "type": "text",
          "value": "new name",
        },
      },
      {
        "name": "description",
        "setter": {
          "args": [
            {
              "kind": "changeset-reference",
              "referenceName": "name",
            },
            {
              "kind": "literal",
              "type": "text",
              "value": " is great",
            },
          ],
          "kind": "function",
          "name": "concat",
        },
      },
      {
        "name": "descLength",
        "setter": {
          "args": [
            {
              "args": [
                {
                  "kind": "changeset-reference",
                  "referenceName": "description",
                },
              ],
              "kind": "function",
              "name": "length",
            },
            {
              "kind": "literal",
              "type": "integer",
              "value": 1,
            },
          ],
          "kind": "function",
          "name": "+",
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with custom inputs 1`] = `
[
  {
    "alias": "ox",
    "changeset": [
      {
        "name": "description",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "description",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "extras",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "extras_name",
          ],
          "kind": "fieldset-reference-input",
          "throughRefKey": "OrgExtra.name",
        },
      },
      {
        "name": "uuid",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "uuid",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "name",
        "setter": {
          "kind": "literal",
          "type": "text",
          "value": "new name",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with nested sibling reference 1`] = `
[
  {
    "alias": "$target_0",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "name2",
        "setter": {
          "kind": "changeset-reference",
          "referenceName": "name",
        },
      },
      {
        "name": "name3",
        "setter": {
          "kind": "changeset-reference",
          "referenceName": "name2",
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "$target_0",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with nested sibling reference 2`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "name": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "text",
      "validators": [],
    },
  },
}
`;
