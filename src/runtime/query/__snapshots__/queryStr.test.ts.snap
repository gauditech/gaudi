// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Endpoint queries chained nested query 1`] = `
{
  "target": {
    "alias": "target",
    "name": "target",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "slug",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "org_slug",
            "type": "text",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_issues",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "issue_id",
            "type": "integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_issues",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_issues",
          "namePath": [
            "Org",
            "public_issues",
          ],
          "refKey": "Org.public_issues",
          "retType": "Issue",
        },
      ],
      "name": "target",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Issue",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_issues",
            "id",
          ],
          "refKey": "Issue.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Org",
            "public_issues",
            "name",
          ],
          "refKey": "Issue.name",
        },
      ],
    },
    "related": [],
  },
}
`;

exports[`Endpoint queries nested query 1`] = `
{
  "target": {
    "alias": "target",
    "name": "target",
    "query": {
      "filter": {
        "kind": "binary",
        "lhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "slug",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "org_slug",
            "type": "text",
          },
        },
        "operator": "and",
        "rhs": {
          "kind": "binary",
          "lhs": {
            "kind": "alias",
            "namePath": [
              "Org",
              "public_repos",
              "id",
            ],
          },
          "operator": "is",
          "rhs": {
            "kind": "variable",
            "name": "repo_id",
            "type": "integer",
          },
        },
      },
      "from": {
        "kind": "model",
        "refKey": "Org",
      },
      "fromPath": [
        "Org",
        "public_repos",
      ],
      "joinPaths": [
        {
          "joinPaths": [],
          "joinType": "inner",
          "kind": "query",
          "name": "public_repos",
          "namePath": [
            "Org",
            "public_repos",
          ],
          "refKey": "Org.public_repos",
          "retType": "Repo",
        },
      ],
      "name": "target",
      "nullable": false,
      "refKey": "N/A",
      "retType": "Repo",
      "select": [
        {
          "alias": "id",
          "kind": "field",
          "name": "id",
          "namePath": [
            "Org",
            "public_repos",
            "id",
          ],
          "refKey": "Repo.id",
        },
        {
          "alias": "name",
          "kind": "field",
          "name": "name",
          "namePath": [
            "Org",
            "public_repos",
            "name",
          ],
          "refKey": "Repo.name",
        },
      ],
    },
    "related": [],
  },
}
`;
