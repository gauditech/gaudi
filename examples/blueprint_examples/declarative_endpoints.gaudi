
endpoint Y {
  updates User as u {
  role superadmin {
    can edit is_enabled
  }
  role * {
    #field { full_name, bio, avatar_url }
    can edit full_name, bio, avatar_url
  }
  }

  select user {
  select field and relations except { password_hash }
  }
}


goal {
  deletes OrgMembership as om
  deletes om.user from Repo.asignees # on delete
  creates RepoEvent { ... }
  Repo.asignees -> OrgMembership
  model RepoAssignee {
  reference membership { to OrgMembership }
  reference collab { to RepoCollaborator } onDelete cascade
  reference user as User
  }
}

# problemi:

- zelimo klasicni CRUD sa sto manje pisanja
  - fieldset & select ocekivani
- goals za vise logike kod inserta, deletanja i sl


fieldset F { field { name, slug, description }}

entrypoint Orgs {
  view Org
  filter {}
  identify with slug
  respond with select { ... }
  endpoint {
    # name create

    create Org as o {
      input { name, slug, description }
      references plan through name

      create OrgMembership {
        set role "owner"
        set user @auth
        set org o
      }
    }
  }
  endpoint {
    update {
      input { name, description, slug }
    }
  }

  endpoint {
    delete {
      deny @auth not in admins
    }
  }

  endpoint {
    list {}
  }

  endpoint {
    get {}
  }

  entrypoint Repositories {
    view repos
    filter {}
    respond with ...

    endpoint {
      list {}
    }
    endpoint {
      get {}
    }
    endpoint {
      delete { deny @auth not in org.admins }
    }
    endpoint {
      input { name, description, slug }

      create Repo as repo {
        # FIXME 1: Create RepoLabel from Org.defaultLabels in a loop
      }
      action {
        query labels { from org.defaultLabels }
        each labels as label {
          create RepoLabel {
            pick label.{ name, color, description }
            pick {
              from label
              select { name, color, description }
            }
            set default true
          }
        }
        each labels {
          create RepoLabel {
            input { name, description }
            set default true
            set repo repo
          }
        }
      }
    }
  }
}


fieldset {
  pick Org.{name, description, slug}
  fieldset plan {
    pick Org.plan.{name}
  }
  fieldset 
}

goal {
  creates Org {
    references plan through name
    creates OrgMembership {
      set ...
      set ...
    }
  }
}

goal {
  update Repo {
    input {}

    delete labels {}

    create labels from query {
      from Org.defaultLabels
      select { name, decription, color, true as default }
    }

    responds with ...
  }
}


{ name: ..., description: ..., plan: { name: ... } }