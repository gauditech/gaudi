entrypoint Orgs {
  target model Org as o
  filter ...
  identify with slug
  endpoint {
    list {}
    respond with select { slug, description, avatar_url }
  }
  endpoint {
    get {}
    respond with select { slug, description, avatar_url, name, public_repos_count, type }
  }
  endpoint {
    deny { @auth is null }
    # TODO defult fields, created_at, updated_at ???
    create Org as org {
      references plan through name
    }
    create OrgMembership as membership {
      set user @auth
      set org o
      set role "owner"
    }
  }

  create endpoint {
    fields ...
    validate with fieldset { ... }
    responds with ...
  }

  custom endpoint {
    create Org {
      create OrgMembership { set ... }
    }
  }

  endpoint {
    update {
    }
    create AuditLog as al {
      set decription "..."
    }

    respond with select from o *
  }
  endpoint {
    deny { @auth is null }
    list Org as o {
      filter { is_public or @auth in members }
      respond with ...
    }
  }
  update {
    deny { when @auth not in admins, code "not an admin" }
    validate with fieldset { field name, field description, field avatar_url }
    goal {
      updates Org as o {
        fields { name, description, avatar_url }
      }
      responds with select {
        slug, description, name, avatar_url
        plan {
          select name, space, private_repos,
            seats, filled_seats(o)
        }
      }
    }
  }
  delete {
    deny { when  }
  }
}

# contact_person -> field email { type text } -> trazi Contact s tim emailom
# org -> plan ("business", "medium", "free", "enterprise")



endpoint X {
  creates User as u
  creates Plan as p
  creates Org as o {
    # references plan through name
    # creates plan
    plan is p
  }
  creates OrgMembership {
    #creates org
    #creates user
    org is o
    user is u
    role is "admin"
  }
}

entrypoint Org {...}
entrypoint Repo {
  target query { from Repo }
  create {
    goal {
      creates Repo
    }
  }
}
