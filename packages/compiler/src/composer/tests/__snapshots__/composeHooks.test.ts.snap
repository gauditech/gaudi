// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compose hooks action hook 1`] = `
[
  {
    "actions": [
      {
        "alias": "$action_0",
        "hook": {
          "args": [
            {
              "kind": "basic",
              "name": "name",
              "setter": {
                "kind": "alias-reference",
                "path": [
                  "org",
                  "name",
                ],
                "source": "aliases",
              },
            },
            {
              "kind": "basic",
              "name": "terms",
              "setter": {
                "kind": "alias-reference",
                "path": [
                  "termsOfUse",
                ],
                "source": "fieldset",
              },
            },
          ],
          "hook": {
            "file": "hooks.js",
            "kind": "source",
            "runtimeName": "MyRuntime",
            "target": "someHook",
          },
        },
        "kind": "execute-hook",
        "responds": false,
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": {
      "kind": "record",
      "nullable": false,
      "record": {
        "termsOfUse": {
          "kind": "field",
          "nullable": false,
          "required": true,
          "type": "boolean",
          "validate": undefined,
        },
      },
    },
    "kind": "custom-one",
    "method": "POST",
    "parentContext": [],
    "path": "somePath",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "paramName": "org_id",
        "path": [
          "id",
        ],
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "name",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "name",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "string",
            "nullable": false,
          },
        },
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
]
`;

exports[`compose hooks composes action hook 1`] = `
[
  {
    "alias": "orgQ",
    "kind": "query",
    "model": "Org",
    "query": {
      "filter": {
        "args": [
          {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          {
            "kind": "alias-reference",
            "path": [
              "org",
              "id",
            ],
            "source": "aliases",
          },
        ],
        "kind": "function",
        "name": "is",
      },
      "fromPath": [
        "Org",
      ],
      "kind": "query",
      "limit": undefined,
      "modelRefKey": "Org",
      "name": "$query",
      "offset": undefined,
      "orderBy": undefined,
      "refKey": "N/A",
      "retCardinality": "collection",
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
        {
          "alias": "name",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "name",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "string",
            "nullable": false,
          },
        },
      ],
    },
  },
  {
    "alias": "$action_1",
    "hook": {
      "args": [
        {
          "kind": "basic",
          "name": "org",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "orgQ",
            ],
            "source": "aliases",
          },
        },
        {
          "kind": "basic",
          "name": "int",
          "setter": {
            "kind": "literal",
            "literal": {
              "kind": "integer",
              "value": 1,
            },
          },
        },
      ],
      "hook": {
        "file": "hooks/auth",
        "kind": "source",
        "runtimeName": "@GAUDI_INTERNAL",
        "target": "login",
      },
    },
    "kind": "execute-hook",
    "responds": false,
  },
]
`;

exports[`compose hooks composes source hooks 1`] = `
{
  "actionHook": {
    "kind": "basic",
    "name": "name",
    "setter": {
      "hook": {
        "args": [],
        "hook": {
          "file": "hooks.js",
          "kind": "source",
          "runtimeName": "MyRuntime",
          "target": "someHook",
        },
      },
      "kind": "hook",
    },
  },
  "modelHook": {
    "args": [],
    "hook": {
      "file": "githubc.js",
      "kind": "source",
      "runtimeName": "MyRuntime",
      "target": "someHook",
    },
    "kind": "model-hook",
    "name": "description",
    "refKey": "Org.description",
  },
  "validatorHook": {
    "hook": {
      "args": [
        {
          "kind": "basic",
          "name": "name",
          "setter": {
            "kind": "identifier-path",
            "namePath": [
              "name",
            ],
          },
        },
      ],
      "hook": {
        "file": "githubc.js",
        "kind": "source",
        "runtimeName": "MyRuntime",
        "target": "someHook",
      },
    },
    "kind": "hook",
  },
}
`;

exports[`compose hooks defaults to the default execution runtime when hook runtime is empty 1`] = `
{
  "actions": [
    {
      "alias": "$action_0",
      "changeset": [
        {
          "kind": "basic",
          "name": "name",
          "setter": {
            "hook": {
              "args": [],
              "hook": {
                "file": "hooks.js",
                "kind": "source",
                "runtimeName": "MyRuntime",
                "target": "randomSlug",
              },
            },
            "kind": "hook",
          },
        },
      ],
      "isPrimary": true,
      "kind": "create-one",
      "model": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "$action_0",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
      "targetPath": [
        "Org",
      ],
    },
  ],
  "authSelect": [],
  "authorize": undefined,
  "fieldset": undefined,
  "kind": "create",
  "parentContext": [],
  "response": [
    {
      "alias": "id",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
    {
      "alias": "name",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
  ],
  "target": {
    "alias": "$target_0",
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "Org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
  },
}
`;

exports[`compose hooks inline hooks 1`] = `
{
  "actionHook": {
    "kind": "basic",
    "name": "name",
    "setter": {
      "hook": {
        "args": [],
        "hook": {
          "inline": "'test name'",
          "kind": "inline",
        },
      },
      "kind": "hook",
    },
  },
  "modelHook": {
    "args": [],
    "hook": {
      "inline": "'some description'",
      "kind": "inline",
    },
    "kind": "model-hook",
    "name": "description",
    "refKey": "Org.description",
  },
  "validatorHook": {
    "hook": {
      "args": [
        {
          "kind": "basic",
          "name": "name",
          "setter": {
            "kind": "identifier-path",
            "namePath": [
              "name",
            ],
          },
        },
      ],
      "hook": {
        "inline": "name === 'name'",
        "kind": "inline",
      },
    },
    "kind": "hook",
  },
}
`;
