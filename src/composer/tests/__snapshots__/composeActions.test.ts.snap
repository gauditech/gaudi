// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`custom actions can create nested relations through transient references 1`] = `
[
  {
    "alias": "repo",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "org_id",
        "setter": {
          "fieldsetAccess": [
            "org_id",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "Repo",
    "select": [
      {
        "alias": "org",
        "kind": "reference",
        "name": "org",
        "namePath": [
          "repo",
          "org",
        ],
        "select": [
          {
            "alias": "id",
            "kind": "field",
            "name": "id",
            "namePath": [
              "repo",
              "org",
              "id",
            ],
            "refKey": "Org.id",
          },
        ],
      },
    ],
    "targetPath": [
      "repo",
    ],
  },
  {
    "alias": "log",
    "changeset": [
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "org",
              "id",
            ],
            "alias": "repo",
          },
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "OrgLog",
    "select": [],
    "targetPath": [
      "repo",
      "org",
      "logs",
    ],
  },
]
`;

exports[`custom actions can update deeply nested references 1`] = `
[
  {
    "alias": "$issue",
    "changeset": [
      {
        "name": "repo_id",
        "setter": {
          "fieldsetAccess": [
            "repo_id",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "integer",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Issue",
    "select": [],
    "targetPath": [
      "issue",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "org",
            "name",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "issue",
      "repo",
      "org",
    ],
  },
]
`;

exports[`custom actions correctly sets parent context 1`] = `
[
  {
    "alias": "myrepo",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "myorg",
          },
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "Repo",
    "select": [],
    "targetPath": [
      "myrepo",
    ],
  },
]
`;

exports[`custom actions sets default action if not given 1`] = `
[
  {
    "alias": "$org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`custom actions succeeds for basic composite create 1`] = `
[
  {
    "alias": "e",
    "changeset": [],
    "kind": "create-one",
    "model": "OrgExtra",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "e",
          "id",
        ],
        "refKey": "OrgExtra.id",
      },
    ],
    "targetPath": [
      "OrgExtra",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "is_new",
        "setter": {
          "kind": "literal",
          "type": "boolean",
          "value": true,
        },
      },
      {
        "name": "extras_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "e",
          },
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "kind": "field",
        "name": "id",
        "namePath": [
          "org",
          "id",
        ],
        "refKey": "Org.id",
      },
    ],
    "targetPath": [
      "org",
    ],
  },
  {
    "alias": "oo",
    "changeset": [
      {
        "name": "org_id",
        "setter": {
          "kind": "reference-value",
          "target": {
            "access": [
              "id",
            ],
            "alias": "org",
          },
          "type": "integer",
        },
      },
    ],
    "kind": "create-one",
    "model": "OrgOwner",
    "select": [],
    "targetPath": [
      "OrgOwner",
    ],
  },
]
`;

exports[`custom actions succeeds for basic update with a deny rule 1`] = `
[
  {
    "alias": "ox",
    "changeset": [
      {
        "name": "description",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "description",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "extras_id",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "extras_id",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "integer",
        },
      },
      {
        "name": "name",
        "setter": {
          "kind": "literal",
          "type": "text",
          "value": "new name",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`custom actions succeeds with custom inputs 1`] = `
[
  {
    "alias": "ox",
    "changeset": [
      {
        "name": "description",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "description",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "extras",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "extras",
            "name",
          ],
          "kind": "fieldset-reference-input",
          "throughField": {
            "name": "name",
            "refKey": "OrgExtra.name",
          },
        },
      },
      {
        "name": "uuid",
        "setter": {
          "fieldsetAccess": [
            "ox",
            "uuid",
          ],
          "kind": "fieldset-input",
          "required": false,
          "type": "text",
        },
      },
      {
        "name": "name",
        "setter": {
          "kind": "literal",
          "type": "text",
          "value": "new name",
        },
      },
    ],
    "filter": undefined,
    "kind": "update-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`custom actions succeeds with nested sibling reference 1`] = `
[
  {
    "alias": "$target_0",
    "changeset": [
      {
        "name": "name",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "name2",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
      {
        "name": "name3",
        "setter": {
          "fieldsetAccess": [
            "name",
          ],
          "kind": "fieldset-input",
          "required": true,
          "type": "text",
        },
      },
    ],
    "kind": "create-one",
    "model": "Org",
    "select": [],
    "targetPath": [
      "$target_0",
    ],
  },
]
`;

exports[`custom actions succeeds with nested sibling reference 2`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "name": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "text",
      "validators": [],
    },
  },
}
`;
