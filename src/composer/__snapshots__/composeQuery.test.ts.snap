// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compose action queries "fetch" action custom endpoint 1`] = `
{
  "alias": "cOrg",
  "changeset": [],
  "kind": "fetch",
  "model": "Org",
  "query": {
    "filter": {
      "args": [
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "id",
          ],
        },
        {
          "kind": "literal",
          "type": "integer",
          "value": 1,
        },
      ],
      "kind": "function",
      "name": "is",
    },
    "fromPath": [
      "Org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "$query",
    "offset": undefined,
    "orderBy": undefined,
    "refKey": "N/A",
    "retCardinality": "collection",
    "retType": "Org",
    "select": [
      {
        "alias": "name",
        "expr": {
          "kind": "alias",
          "namePath": [
            "Org",
            "name",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "text",
          "nullable": false,
        },
      },
    ],
  },
}
`;

exports[`compose action queries "fetch" action native endpoint 1`] = `
{
  "alias": "$action_0",
  "changeset": [
    {
      "name": "name",
      "setter": {
        "fieldsetAccess": [
          "name",
        ],
        "kind": "fieldset-input",
        "required": false,
        "type": "text",
      },
    },
    {
      "name": "description",
      "setter": {
        "fieldsetAccess": [
          "description",
        ],
        "kind": "fieldset-input",
        "required": false,
        "type": "text",
      },
    },
  ],
  "filter": undefined,
  "isPrimary": true,
  "kind": "update-one",
  "model": "Org",
  "select": [],
  "targetPath": [
    "$target_0",
  ],
}
`;

exports[`compose action queries "fetch" action query first 1`] = `
{
  "alias": "measurement",
  "changeset": [],
  "kind": "fetch",
  "model": "Measurement",
  "query": {
    "filter": undefined,
    "fromPath": [
      "device",
      "measurements",
    ],
    "kind": "query",
    "limit": 1,
    "modelRefKey": "Device",
    "name": "$query",
    "offset": undefined,
    "orderBy": [
      {
        "direction": "desc",
        "exp": {
          "kind": "alias",
          "namePath": [
            "device",
            "measurements",
            "timestamp",
          ],
        },
      },
    ],
    "refKey": "N/A",
    "retCardinality": "nullable",
    "retType": "Measurement",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "alias",
          "namePath": [
            "device",
            "measurements",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
      {
        "alias": "value",
        "expr": {
          "kind": "alias",
          "namePath": [
            "device",
            "measurements",
            "value",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
      {
        "alias": "timestamp",
        "expr": {
          "kind": "alias",
          "namePath": [
            "device",
            "measurements",
            "timestamp",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
      {
        "alias": "device_id",
        "expr": {
          "kind": "alias",
          "namePath": [
            "device",
            "measurements",
            "device_id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
  },
}
`;

exports[`compose model queries example with nested filters 1`] = `
[
  {
    "filter": {
      "args": [
        {
          "args": [
            {
              "kind": "alias",
              "namePath": [
                "Org",
                "repos",
                "org",
                "id",
              ],
            },
            {
              "kind": "literal",
              "type": "integer",
              "value": 1,
            },
          ],
          "kind": "function",
          "name": "is",
        },
        {
          "kind": "alias",
          "namePath": [
            "Org",
            "repos",
            "is_active",
          ],
        },
      ],
      "kind": "function",
      "name": "and",
    },
    "fromPath": [
      "Org",
      "repos",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "repos_if_one",
    "offset": undefined,
    "orderBy": undefined,
    "refKey": "Org.repos_if_one",
    "retCardinality": "collection",
    "retType": "Repo",
    "select": [],
  },
]
`;

exports[`compose model queries nested example without filters 1`] = `
[
  {
    "filter": undefined,
    "fromPath": [
      "Org",
      "repos",
      "org",
    ],
    "kind": "query",
    "limit": undefined,
    "modelRefKey": "Org",
    "name": "back_to_org",
    "offset": undefined,
    "orderBy": undefined,
    "refKey": "Org.back_to_org",
    "retCardinality": "collection",
    "retType": "Org",
    "select": [],
  },
]
`;

exports[`compose model queries order and limit 1`] = `
{
  "filter": undefined,
  "fromPath": [
    "Org",
    "repos",
  ],
  "kind": "query",
  "limit": 5,
  "modelRefKey": "Org",
  "name": "recent_repos",
  "offset": undefined,
  "orderBy": [
    {
      "direction": "desc",
      "exp": {
        "kind": "alias",
        "namePath": [
          "Org",
          "repos",
          "id",
        ],
      },
    },
  ],
  "refKey": "Org.recent_repos",
  "retCardinality": "collection",
  "retType": "Repo",
  "select": [],
}
`;
