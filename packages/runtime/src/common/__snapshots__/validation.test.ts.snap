// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`runtime validation build fieldset with validation 1`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "booleanProp": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "boolean",
      "validate": {
        "args": [
          {
            "kind": "literal",
            "literal": {
              "kind": "boolean",
              "value": true,
            },
          },
        ],
        "kind": "call",
        "validator": "isEqualBool",
      },
    },
    "integerProp": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "integer",
      "validate": {
        "exprs": [
          {
            "args": [
              {
                "kind": "literal",
                "literal": {
                  "kind": "integer",
                  "value": 0,
                },
              },
            ],
            "kind": "call",
            "validator": "minInt",
          },
          {
            "args": [
              {
                "kind": "literal",
                "literal": {
                  "kind": "integer",
                  "value": 9999,
                },
              },
            ],
            "kind": "call",
            "validator": "maxInt",
          },
          {
            "args": [
              {
                "kind": "literal",
                "literal": {
                  "kind": "integer",
                  "value": 123,
                },
              },
            ],
            "kind": "call",
            "validator": "isEqualInt",
          },
        ],
        "kind": "and",
      },
    },
    "nullable": {
      "kind": "field",
      "nullable": true,
      "required": true,
      "type": "string",
      "validate": undefined,
    },
    "optional": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "integer",
      "validate": undefined,
    },
    "required": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "float",
      "validate": undefined,
    },
    "something": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "boolean",
      "validate": undefined,
    },
    "subrecord_id": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "integer",
      "validate": undefined,
    },
    "textProp": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "string",
      "validate": {
        "exprs": [
          {
            "args": [
              {
                "kind": "literal",
                "literal": {
                  "kind": "integer",
                  "value": 4,
                },
              },
            ],
            "kind": "call",
            "validator": "minLength",
          },
          {
            "args": [
              {
                "kind": "literal",
                "literal": {
                  "kind": "integer",
                  "value": 100,
                },
              },
            ],
            "kind": "call",
            "validator": "maxLength",
          },
          {
            "args": [],
            "kind": "call",
            "validator": "isEmail",
          },
        ],
        "kind": "and",
      },
    },
  },
}
`;

exports[`runtime validation build validation action 1`] = `
{
  "key": "key",
  "kind": "validate",
  "validate": {
    "args": [
      {
        "kind": "alias",
        "namePath": [
          "newFoo",
          "from",
        ],
      },
      {
        "kind": "alias",
        "namePath": [
          "newFoo",
          "to",
        ],
      },
    ],
    "kind": "call",
    "validator": "maxInt",
  },
}
`;

exports[`runtime validation throws validation exception with validation error messages 1`] = `"{"code":"ERROR_CODE_VALIDATION","message":"Validation error","data":{"subrecord":[{"code":"required","params":{}}],"prop1":[{"code":"required","params":{}}],"prop2":[{"code":"unexpected-type","params":{"value":"a","expected":"integer"}}],"nonNullable":[{"code":"is-not-nullable","params":{}}],"textProp":[{"code":"too-long","params":{"value":"too long string","min":4}}],"integerProp":[{"code":"too-large","params":{"value":10001,"max":100}}],"booleanProp":[{"code":"not-equal","params":{"value":false,"target":true}}]}}"`;
