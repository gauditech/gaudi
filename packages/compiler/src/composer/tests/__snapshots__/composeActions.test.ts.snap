// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`compose actions custom actions creates actions in custom endpoint 1`] = `
[
  {
    "actions": [],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-one",
    "method": "GET",
    "parentContext": [],
    "path": "customGet",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "paramName": "org_id",
        "path": [
          "id",
        ],
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
  {
    "actions": [
      {
        "alias": "newOrg",
        "changeset": [
          {
            "fieldsetPath": [
              "newOrg",
              "name",
            ],
            "kind": "input",
            "name": "name",
            "setter": {
              "kind": "alias-reference",
              "path": [
                "newOrg",
                "name",
              ],
              "source": "fieldset",
            },
            "validate": undefined,
          },
        ],
        "filter": undefined,
        "isPrimary": false,
        "kind": "update-one",
        "model": "Org",
        "select": [
          {
            "alias": "id",
            "expr": {
              "kind": "identifier-path",
              "namePath": [
                "newOrg",
                "id",
              ],
            },
            "kind": "expression",
            "type": {
              "kind": "integer",
              "nullable": false,
            },
          },
        ],
        "targetPath": [
          "org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": {
      "kind": "record",
      "nullable": false,
      "record": {
        "newOrg": {
          "kind": "record",
          "nullable": false,
          "record": {
            "name": {
              "kind": "field",
              "nullable": false,
              "required": false,
              "type": "string",
              "validate": undefined,
            },
          },
        },
      },
    },
    "kind": "custom-one",
    "method": "PATCH",
    "parentContext": [],
    "path": "customUpdate",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "paramName": "org_id",
        "path": [
          "id",
        ],
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
  {
    "actions": [
      {
        "kind": "delete-one",
        "model": "Org",
        "targetPath": [
          "org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-one",
    "method": "DELETE",
    "parentContext": [],
    "path": "customDelete",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "identifyWith": {
        "paramName": "org_id",
        "path": [
          "id",
        ],
        "type": "integer",
      },
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
  {
    "actions": [],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": undefined,
    "kind": "custom-many",
    "method": "GET",
    "parentContext": [],
    "path": "customList",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
  {
    "actions": [
      {
        "alias": "org",
        "changeset": [
          {
            "fieldsetPath": [
              "org",
              "name",
            ],
            "kind": "input",
            "name": "name",
            "setter": {
              "kind": "alias-reference",
              "path": [
                "org",
                "name",
              ],
              "source": "fieldset",
            },
            "validate": undefined,
          },
        ],
        "isPrimary": false,
        "kind": "create-one",
        "model": "Org",
        "select": [
          {
            "alias": "id",
            "expr": {
              "kind": "identifier-path",
              "namePath": [
                "org",
                "id",
              ],
            },
            "kind": "expression",
            "type": {
              "kind": "integer",
              "nullable": false,
            },
          },
        ],
        "targetPath": [
          "Org",
        ],
      },
    ],
    "authSelect": [],
    "authorize": undefined,
    "fieldset": {
      "kind": "record",
      "nullable": false,
      "record": {
        "org": {
          "kind": "record",
          "nullable": false,
          "record": {
            "name": {
              "kind": "field",
              "nullable": false,
              "required": true,
              "type": "string",
              "validate": undefined,
            },
          },
        },
      },
    },
    "kind": "custom-many",
    "method": "POST",
    "parentContext": [],
    "path": "customCreate",
    "responds": true,
    "response": undefined,
    "target": {
      "alias": "org",
      "kind": "model",
      "name": "Org",
      "namePath": [
        "Org",
      ],
      "retType": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "Org",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
    },
  },
]
`;

exports[`compose actions native actions can create nested relations through transient references 1`] = `
[
  {
    "alias": "repo",
    "changeset": [
      {
        "fieldsetPath": [
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
      {
        "fieldsetPath": [
          "org_id",
        ],
        "kind": "input",
        "name": "org_id",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "org_id",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Repo",
    "select": [
      {
        "alias": "org",
        "kind": "nested-select",
        "namePath": [
          "repo",
          "org",
        ],
        "refKey": "Repo.org",
        "select": [
          {
            "alias": "id",
            "expr": {
              "kind": "identifier-path",
              "namePath": [
                "repo",
                "org",
                "id",
              ],
            },
            "kind": "expression",
            "type": {
              "kind": "integer",
              "nullable": false,
            },
          },
        ],
      },
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "repo",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "Repo",
    ],
  },
  {
    "alias": "log",
    "changeset": [
      {
        "kind": "basic",
        "name": "org_id",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "repo",
            "org",
            "id",
          ],
          "source": "alias",
        },
      },
    ],
    "isPrimary": false,
    "kind": "create-one",
    "model": "OrgLog",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "log",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "repo",
      "org",
      "logs",
    ],
  },
]
`;

exports[`compose actions native actions can update deeply nested references 1`] = `
[
  {
    "alias": "$action_0",
    "changeset": [],
    "filter": undefined,
    "isPrimary": true,
    "kind": "update-one",
    "model": "Issue",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "$action_0",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "issue",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "fieldsetPath": [
          "org",
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "org",
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
    ],
    "filter": undefined,
    "isPrimary": false,
    "kind": "update-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "issue",
      "repo",
      "org",
    ],
  },
]
`;

exports[`compose actions native actions correctly implements default values: create 1`] = `
{
  "actions": [
    {
      "alias": "ox",
      "changeset": [
        {
          "fieldsetPath": [
            "name",
          ],
          "kind": "input",
          "name": "name",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "name",
            ],
            "source": "fieldset",
          },
          "validate": undefined,
        },
        {
          "fieldsetPath": [
            "description",
          ],
          "kind": "input",
          "name": "description",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "description",
            ],
            "source": "fieldset",
          },
          "validate": undefined,
        },
        {
          "fieldsetPath": [
            "uuid",
          ],
          "kind": "input",
          "name": "uuid",
          "setter": {
            "args": [
              {
                "kind": "alias-reference",
                "path": [
                  "uuid",
                ],
                "source": "fieldset",
              },
              {
                "args": [
                  {
                    "kind": "literal",
                    "literal": {
                      "kind": "string",
                      "value": "uuid-",
                    },
                  },
                  {
                    "args": [
                      {
                        "args": [],
                        "kind": "function",
                        "name": "now",
                      },
                    ],
                    "kind": "function",
                    "name": "stringify",
                  },
                ],
                "kind": "function",
                "name": "concat",
              },
            ],
            "kind": "function",
            "name": "coalesce",
          },
          "validate": undefined,
        },
        {
          "fieldsetPath": [
            "extras_id",
          ],
          "kind": "input",
          "name": "extras_id",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "extras_id",
            ],
            "source": "fieldset",
          },
          "validate": undefined,
        },
      ],
      "isPrimary": true,
      "kind": "create-one",
      "model": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "ox",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
      "targetPath": [
        "Org",
      ],
    },
  ],
  "authSelect": [],
  "authorize": undefined,
  "fieldset": {
    "kind": "record",
    "nullable": false,
    "record": {
      "description": {
        "kind": "field",
        "nullable": false,
        "required": true,
        "type": "string",
        "validate": undefined,
      },
      "extras_id": {
        "kind": "field",
        "nullable": false,
        "required": true,
        "type": "integer",
        "validate": undefined,
      },
      "name": {
        "kind": "field",
        "nullable": false,
        "required": true,
        "type": "string",
        "validate": undefined,
      },
      "uuid": {
        "kind": "field",
        "nullable": false,
        "required": true,
        "type": "string",
        "validate": undefined,
      },
    },
  },
  "kind": "create",
  "parentContext": [],
  "response": [
    {
      "alias": "id",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
    {
      "alias": "name",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "description",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "description",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "uuid",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "uuid",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "extras_id",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "extras_id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
  ],
  "target": {
    "alias": "org",
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "Org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
  },
}
`;

exports[`compose actions native actions correctly implements default values: update 1`] = `
{
  "actions": [
    {
      "alias": "ox",
      "changeset": [
        {
          "fieldsetPath": [
            "name",
          ],
          "kind": "input",
          "name": "name",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "name",
            ],
            "source": "fieldset",
          },
          "validate": undefined,
        },
        {
          "fieldsetPath": [
            "description",
          ],
          "kind": "input",
          "name": "description",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "description",
            ],
            "source": "fieldset",
          },
          "validate": undefined,
        },
        {
          "kind": "basic",
          "name": "uuid",
          "setter": {
            "kind": "literal",
            "literal": {
              "kind": "string",
              "value": "new uuid",
            },
          },
        },
        {
          "fieldsetPath": [
            "extras",
          ],
          "kind": "reference-through",
          "name": "extras",
          "setter": {
            "kind": "alias-reference",
            "path": [
              "extras",
              "id",
            ],
            "source": "referenceThroughs",
          },
          "through": [
            "name",
          ],
        },
      ],
      "filter": undefined,
      "isPrimary": true,
      "kind": "update-one",
      "model": "Org",
      "select": [
        {
          "alias": "id",
          "expr": {
            "kind": "identifier-path",
            "namePath": [
              "ox",
              "id",
            ],
          },
          "kind": "expression",
          "type": {
            "kind": "integer",
            "nullable": false,
          },
        },
      ],
      "targetPath": [
        "org",
      ],
    },
  ],
  "authSelect": [],
  "authorize": undefined,
  "fieldset": {
    "kind": "record",
    "nullable": false,
    "record": {
      "description": {
        "kind": "field",
        "nullable": false,
        "required": true,
        "type": "string",
        "validate": undefined,
      },
      "extras": {
        "kind": "field",
        "nullable": false,
        "required": false,
        "type": "string",
        "validate": undefined,
      },
      "name": {
        "kind": "field",
        "nullable": false,
        "required": false,
        "type": "string",
        "validate": undefined,
      },
    },
  },
  "kind": "update",
  "parentContext": [],
  "response": [
    {
      "alias": "id",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
    {
      "alias": "name",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "name",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "description",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "description",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "uuid",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "uuid",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "string",
        "nullable": false,
      },
    },
    {
      "alias": "extras_id",
      "expr": {
        "kind": "identifier-path",
        "namePath": [
          "Org",
          "extras_id",
        ],
      },
      "kind": "expression",
      "type": {
        "kind": "integer",
        "nullable": false,
      },
    },
  ],
  "target": {
    "alias": "org",
    "identifyWith": {
      "paramName": "org_id",
      "path": [
        "id",
      ],
      "type": "integer",
    },
    "kind": "model",
    "name": "Org",
    "namePath": [
      "Org",
    ],
    "retType": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "Org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
  },
}
`;

exports[`compose actions native actions correctly sets parent context 1`] = `
[
  {
    "alias": "$action_0",
    "changeset": [
      {
        "fieldsetPath": [
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
      {
        "kind": "basic",
        "name": "org_id",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "myorg",
            "id",
          ],
          "source": "alias",
        },
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Repo",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "$action_0",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "repos",
    ],
  },
]
`;

exports[`compose actions native actions create action doesn't produce inputs for fields with default 1`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "description": {
      "kind": "field",
      "nullable": true,
      "required": true,
      "type": "string",
      "validate": undefined,
    },
  },
}
`;

exports[`compose actions native actions sets default action if not given 1`] = `
[
  {
    "alias": "$action_0",
    "changeset": [
      {
        "fieldsetPath": [
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
    ],
    "filter": undefined,
    "isPrimary": true,
    "kind": "update-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "$action_0",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds for basic composite create 1`] = `
[
  {
    "alias": "e",
    "changeset": [],
    "isPrimary": false,
    "kind": "create-one",
    "model": "OrgExtra",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "e",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "OrgExtra",
    ],
  },
  {
    "alias": "org",
    "changeset": [
      {
        "kind": "basic",
        "name": "is_new",
        "setter": {
          "kind": "literal",
          "literal": {
            "kind": "boolean",
            "value": true,
          },
        },
      },
      {
        "fieldsetPath": [
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
      {
        "kind": "basic",
        "name": "extras_id",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "e",
            "id",
          ],
          "source": "alias",
        },
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "Org",
    ],
  },
  {
    "alias": "oo",
    "changeset": [
      {
        "kind": "basic",
        "name": "org_id",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "org",
            "id",
          ],
          "source": "alias",
        },
      },
    ],
    "isPrimary": false,
    "kind": "create-one",
    "model": "OrgOwner",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "oo",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "OrgOwner",
    ],
  },
]
`;

exports[`compose actions native actions succeeds when extra input is defined and referenced 1`] = `
[
  {
    "alias": "org",
    "changeset": [
      {
        "kind": "basic",
        "name": "name",
        "setter": {
          "args": [
            {
              "kind": "literal",
              "literal": {
                "kind": "string",
                "value": "Mr/Mrs ",
              },
            },
            {
              "kind": "alias-reference",
              "path": [
                "iname",
              ],
              "source": "fieldset",
            },
          ],
          "kind": "function",
          "name": "concat",
        },
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "org",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "Org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds when extra input is defined and referenced 2`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "iname": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "string",
      "validate": {
        "args": [
          {
            "kind": "literal",
            "literal": {
              "kind": "integer",
              "value": 4,
            },
          },
        ],
        "kind": "call",
        "validator": "minLength",
      },
    },
  },
}
`;

exports[`compose actions native actions succeeds with arithmetic expressions in setters 1`] = `
[
  {
    "alias": "$action_0",
    "changeset": [
      {
        "kind": "basic",
        "name": "name",
        "setter": {
          "kind": "literal",
          "literal": {
            "kind": "string",
            "value": "new name",
          },
        },
      },
      {
        "kind": "basic",
        "name": "description",
        "setter": {
          "args": [
            {
              "kind": "identifier-path",
              "namePath": [
                "name",
              ],
            },
            {
              "kind": "literal",
              "literal": {
                "kind": "string",
                "value": " is great",
              },
            },
          ],
          "kind": "function",
          "name": "concat",
        },
      },
      {
        "kind": "basic",
        "name": "descLength",
        "setter": {
          "args": [
            {
              "args": [
                {
                  "kind": "identifier-path",
                  "namePath": [
                    "description",
                  ],
                },
              ],
              "kind": "function",
              "name": "length",
            },
            {
              "kind": "literal",
              "literal": {
                "kind": "integer",
                "value": 1,
              },
            },
          ],
          "kind": "function",
          "name": "+",
        },
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "$action_0",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "Org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with nested sibling reference 1`] = `
[
  {
    "alias": "$action_0",
    "changeset": [
      {
        "kind": "basic",
        "name": "name3",
        "setter": {
          "kind": "identifier-path",
          "namePath": [
            "name2",
          ],
        },
      },
      {
        "kind": "basic",
        "name": "name2",
        "setter": {
          "kind": "identifier-path",
          "namePath": [
            "name",
          ],
        },
      },
      {
        "fieldsetPath": [
          "name",
        ],
        "kind": "input",
        "name": "name",
        "setter": {
          "kind": "alias-reference",
          "path": [
            "name",
          ],
          "source": "fieldset",
        },
        "validate": undefined,
      },
    ],
    "isPrimary": true,
    "kind": "create-one",
    "model": "Org",
    "select": [
      {
        "alias": "id",
        "expr": {
          "kind": "identifier-path",
          "namePath": [
            "$action_0",
            "id",
          ],
        },
        "kind": "expression",
        "type": {
          "kind": "integer",
          "nullable": false,
        },
      },
    ],
    "targetPath": [
      "Org",
    ],
  },
]
`;

exports[`compose actions native actions succeeds with nested sibling reference 2`] = `
{
  "kind": "record",
  "nullable": false,
  "record": {
    "name": {
      "kind": "field",
      "nullable": false,
      "required": true,
      "type": "string",
      "validate": undefined,
    },
  },
}
`;
