// database {
//     engine pg
//     uri 'postgresql://postgres@localhost:5342'
// } 

// ----- models

model Org {
    field name { type text }
    field slug { type text, unique }
    field description { type text }
    field optOut { type text, nullable }

    relation repos { from Repo, through org }
    relation memberships { from OrgMembership, through org }

    query members { from memberships.user }
    query public_repos { from repos, filter { is_public is true } }
    query public_issues { from public_repos.issues }
}

model OrgMembership {
    reference user { to User }
    reference org { to Org }
}

model Repo {
    reference org { to Org }

    field name { type text }
    field slug { type text, unique }
    field description { type text }
    field is_public { type boolean, default true }

    relation issues { from Issue, through repo }
}

model Issue {
    field title { type text }
    field body { type text }
    reference repo { to Repo }
}

// ----- start auth model
model User {
    field name { type text }
    relation authLocal { from UserAuthLocal, through user }
    relation accessToken { from UserAccessToken, through user }
    relation org_memberships { from OrgMembership, through user }
}
model UserAuthLocal {
    reference user { to User }
    field username { type text, unique }
    field password { type text }
}
model UserAccessToken {
    reference user { to User }
    field token { type text, unique }
    field expiryDate { type text }
}
// ----- end auth model

// ----- entrypoints

entrypoint Orgs {
    target model Org
    identify with slug
    response { name, slug, description, repos { issues { title, body, repo { org } } }, members, public_repos, public_issues }

    get endpoint {}
    list endpoint {}
    create endpoint {}
    update endpoint {}

    entrypoint Repos {
        target relation repos
        response { id, slug, description, org_id, issues { repo } }

        get endpoint {}
        list endpoint {}
        create endpoint {}
        update endpoint {}
        delete endpoint {}
    }

    entrypoint PublicRepos {
        target relation public_repos
        response { id, slug, description, org_id }

        get endpoint {}
        list endpoint {}
        // create endpoint {}
    }

    entrypoint AllIssues {
        target relation public_issues
        response { id, title, body }
        list endpoint {}
    }

    entrypoint Members {
        target relation members
        response { id, name }
        list endpoint {}
        get endpoint {}
    }
}

// ----- populators

populator Dev {
  // org without repos and users
  populate EmptyOrg {
    target model Org as org

    // org
    set name "Organization 1"
    set slug "org-1"
    set description "Description of Organization 1"
    set optOut "Opt out from org Organization 1"
  }

  // org without repos and users
  populate OrgWith1RepoAnd1Member {
    target model Org as org

    // org
    set name "Organization 2"
    set slug "org-2"
    set description "Description of Organization 2"
    set optOut "Opt out from org Organization 2"

    populate Repos {
        target relation repos as repo

        // fields
        set name "Repo 1 for org-2"
        set slug "repo-org-2"
        set description "Description of repo-1-org-2"
        set is_public true
    }
  }
}
