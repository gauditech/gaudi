// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Aggregates to queries composes a query that filters by aggregate field to produce another aggregate 1`] = `
"SELECT
  "Org"."id" AS "id",
  "Org"."name" AS "name",
  "Org.COUNT.issues_with_comments.id"."result" AS "total_issues"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.issues_with_comments"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN (
        SELECT
          "Org.repos.issues".*,
          "Org"."id" AS "__join_connection"
        FROM
          "org" AS "Org"
          INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
          INNER JOIN "issue" AS "Org.repos.issues" ON "Org.repos"."id" = "Org.repos.issues"."repo_id"
          LEFT JOIN (
            SELECT
              "Issue"."id" AS "__join_connection",
              COALESCE(count("Issue.comments"."id"), 0) AS "result"
            FROM
              "issue" AS "Issue"
              LEFT JOIN "comment" AS "Issue.comments" ON "Issue"."id" = "Issue.comments"."issue_id"
            GROUP BY
              "Issue"."id"
          ) AS "Org.repos.issues.COUNT.comments.id" ON "Org.repos.issues"."id" = "Org.repos.issues.COUNT.comments.id"."__join_connection"
        WHERE
          "Org.repos.issues.COUNT.comments.id"."result" > 0
      ) AS "Org.issues_with_comments" ON "Org"."id" = "Org.issues_with_comments"."__join_connection"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.issues_with_comments.id" ON "Org"."id" = "Org.COUNT.issues_with_comments.id"."__join_connection""
`;

exports[`Aggregates to queries composes a query with simple aggregate that has joins in the aggregate subquery 1`] = `
"SELECT
  "Org"."id" AS "id",
  "Org"."name" AS "name",
  "Org.COUNT.repos.issues.id"."result" AS "total_issues"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.repos.issues"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
      LEFT JOIN "issue" AS "Org.repos.issues" ON "Org.repos"."id" = "Org.repos.issues"."repo_id"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.repos.issues.id" ON "Org"."id" = "Org.COUNT.repos.issues.id"."__join_connection""
`;

exports[`Aggregates to queries composes a query with simple aggregate through query 1`] = `
"SELECT
  "Org"."id" AS "id",
  "Org"."name" AS "name",
  "Org.COUNT.all_repos_nested.id"."result" AS "repo_count"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.all_repos_nested"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN (
        SELECT
          "Org.all_repos".*,
          "Org"."id" AS "__join_connection"
        FROM
          "org" AS "Org"
          INNER JOIN (
            SELECT
              "Org.repos".*,
              "Org"."id" AS "__join_connection"
            FROM
              "org" AS "Org"
              INNER JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
          ) AS "Org.all_repos" ON "Org"."id" = "Org.all_repos"."__join_connection"
      ) AS "Org.all_repos_nested" ON "Org"."id" = "Org.all_repos_nested"."__join_connection"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.all_repos_nested.id" ON "Org"."id" = "Org.COUNT.all_repos_nested.id"."__join_connection""
`;

exports[`Aggregates to queries composes a query with simple aggregate through relation 1`] = `
"SELECT
  "Org"."id" AS "id",
  "Org"."name" AS "name",
  "Org.COUNT.repos.id"."result" AS "repo_count"
FROM
  "org" AS "Org"
  LEFT JOIN (
    SELECT
      "Org"."id" AS "__join_connection",
      COALESCE(count("Org.repos"."id"), 0) AS "result"
    FROM
      "org" AS "Org"
      LEFT JOIN "repo" AS "Org.repos" ON "Org"."id" = "Org.repos"."org_id"
    GROUP BY
      "Org"."id"
  ) AS "Org.COUNT.repos.id" ON "Org"."id" = "Org.COUNT.repos.id"."__join_connection""
`;

exports[`Expression functions to queries composes a query with expression functions 1`] = `
"SELECT
  "Repo"."id" AS "id"
FROM
  "repo" AS "Repo"
WHERE
  (
    (
      (
        (
          char_length("Repo"."name") = 4
          OR concat("Repo"."name", "Repo"."name") = 'foofoo'
        )
        OR lower("Repo"."name") = lower('FOO')
      )
      OR upper("Repo"."name") = upper('BAR')
    )
    OR now() > 123456789
  )"
`;

exports[`Expressions to queries composes a complex filter expression and computed 1`] = `
"SELECT
  "Item"."id" AS "id"
FROM
  "item" AS "Item"
WHERE
  "Item"."multiplier" * ("Item"."value" + 1) / char_length(concat("Item"."textual", 'tail')) = "Item"."multiplier" * ("Item"."value" + 1) / char_length(concat("Item"."textual", 'tail'))"
`;
